{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Estructura","text":""},{"location":"#estructura-de-un-sistema-informatico","title":"Estructura de un sistema inform\u00e1tico","text":"<p>Un sistema inform\u00e1tico es un conjunto de elementos hardware, software y humanos dise\u00f1ados para un prop\u00f3sito en concreto. Todos estos elementos se relacionan entre s\u00ed creando sinergias orientadas al prop\u00f3sito para el que fue dise\u00f1ado y construido. Un ordenador que ejecuta un programa de contabilidad conforma en s\u00ed mismo un sistema inform\u00e1tico, pero tambi\u00e9n se puede formar un sistema inform\u00e1tico formado por cientos de ordenadores conectados en red. Dentro del sistema inform\u00e1tico existen, al menos, tres subsistemas que lo componen:</p> <ul> <li>El subsistema f\u00edsico o hardware</li> <li>El subsistema l\u00f3gico o software</li> <li>El subsistema humano</li> </ul> <p></p> <p>El primer subsistema, el f\u00edsico, est\u00e1 compuesto por todos aquellos elementos tangibles. Entre ellos hay que destacar los ordenadores (cada componente del equipo es una pieza del sistema), los perif\u00e9ricos, los elementos de interconexi\u00f3n (cableado, routers, switches, puntos de acceso) y aquellos que dotan de seguridad al sistema (SAI, paneles de acceso, c\u00e1maras de video-vigilancia entre otros). Se trata pues del esqueleto de nuestro sistema y va a determinar tanto la potencia de c\u00e1lculo del sistema como la capacidad operativa del mismo.</p> <p>El segundo subsistema lo componen todos los programas que se encuentran instalados en los equipos, servidores, elementos de interconexi\u00f3n y seguridad. Su cometido es la de ofrecer las herramientas necesarias para desempe\u00f1ar la funci\u00f3n del sistema inform\u00e1tico en el que est\u00e1 inmerso. Es un subsistema cr\u00edtico y es necesario mantenerlo actualizado con las \u00faltimas revisiones de software, especialmente en lo que se refiere al sistema operativo, controladores y software de seguridad. Este subsistema tambi\u00e9n se divide dependiendo de la funci\u00f3n del programa:</p> <ul> <li>Aplicaciones inform\u00e1ticas, que son las encargadas de ofrecer herramientas al subsistema humano para desempe\u00f1ar sus tareas. Aplicaciones como procesadores de texto, hojas de c\u00e1lculo, dise\u00f1o asistido por ordenador, cartograf\u00eda, compresi\u00f3n de archivos y un vasto etc\u00e9tera.</li> <li>firmware, que se encuentra integrado directamente en un dispositivo de hardware y que ofrece la posibilidad de configurar este dispositivo de manera muy concreta. El sistema BIOS (Basic Input Output System) de las placas base, la interfaz de los routers y/o switches o el acceso a las c\u00e1maras de seguridad son algunos ejemplos de este tipo de software.</li> <li>controladores (drivers), que son los encargados de identificar el hardware e informar de las caracter\u00edsticas del mismo al sistema operativo. El uso inadecuado de un controlador puede ocasionar que la capacidad de nuestro software quede mermada o inutilizada por completo.</li> <li>sistema operativo, encargado de transformar el hardware en recursos para ofrec\u00e9rselos a las aplicaciones. En los siguientes puntos trataremos este elemento de forma pormenorizada.</li> </ul> <p></p> <p>El tercero y no menos importante, lo forman el conjunto de usuarios que utilizar\u00e1n las herramientas que est\u00e1n a su disposici\u00f3n. De suma importancia es el perfil de estos usuarios y las competencias inform\u00e1ticas de las que dispongan. Existen diferencias en plantear un sistema para una empresa de desarrollo de aplicaciones en donde a los usuarios se les presupone unos altos conocimientos en inform\u00e1tica, que para una oficina de correos, en donde presumiblemente no los tendr\u00e1n.</p> <p>Otro factor muy importante es la formaci\u00f3n y educaci\u00f3n de los usuarios. Saber que acciones pueden o no pueden desempe\u00f1ar, c\u00f3mo actuar ante una posible amenaza, aprender a resolver ciertos problemas o realizar actividades formativas para utilizar un determinado programa, son solo algunas de las caracter\u00edsticas que el t\u00e9cnico encargado del sistema deber\u00e1 afrontar.</p> <p>En definitiva, el objetivo final del sistema inform\u00e1tico determinar\u00e1 la composici\u00f3n de cada una de sus partes as\u00ed como la relaci\u00f3n existente entre ellas. Tanto requerimientos de hardware, software como humanos no ser\u00e1n los mismos si se dise\u00f1a un sistema para una peque\u00f1a gestora de contabilidad o un laboratorio de investigaci\u00f3n. Es trabajo del t\u00e9cnico dotar a cada subsistema de las caracter\u00edsticas necesarias para dar servida cuenta de los objetivos a desempe\u00f1ar.</p> <p>La elecci\u00f3n de cada uno de estos elementos no solo debe estar orientada a la consecuci\u00f3n de los objetivos, sino a la compatibilidad entre los diferentes subsistemas. El sistema operativo debe ir en consonancia con las capacidades de c\u00f3mputo del hardware. Los programas deben ser compatibles con la elecci\u00f3n del sistema operativo. Deben existir controladores espec\u00edficos para este sistema operativo o el hardware no rendir\u00e1 seg\u00fan lo esperado. En definitiva, no resulta sencilla la conjunci\u00f3n de todos los elementos para que todo sistema funcione orquestado y d\u00e9 respuesta a las expectativas de los usuarios.</p> <p>Para ello, tan importante es el dise\u00f1o como el mantenimiento, revisi\u00f3n y actualizaci\u00f3n del sistema inform\u00e1tico. Esta tarea recaer\u00e1 en los t\u00e9cnicos cuya misi\u00f3n es establecer un programa de mantenimiento y revisi\u00f3n que consistir\u00e1 revisi\u00f3n de las actualizaciones de software (especialmente el de seguridad), comprobaci\u00f3n y limpieza del hardware, an\u00e1lisis del sistema de comunicaci\u00f3n para identificar posibles fallos o cuellos de botella, la formaci\u00f3n constante del subsistema humano, sobre todo en funciones de seguridad, revisi\u00f3n de los registros diarios del sistema y visor de eventos entre otras tareas. Es necesario la creaci\u00f3n de un plan de mantenimiento para prevenir un mal funcionamiento del sistema.</p>"},{"location":"#el-sistema-operativo","title":"El Sistema Operativo","text":"<p>El ordenador es un sistema programable formado por un conjunto de elementos hardware que necesitan instrucciones que le indiquen c\u00f3mo utilizar los recursos. El conjunto de instrucciones o programas es lo que conocemos como software. Un ordenador sin software que lo programe no posee utilidad alguna, salvo la meramente decorativa. Un sistema operativo es un conjunto de programas que, ordenadamente relacionados entre s\u00ed, contribuyen a que el ordenador lleve a efecto el trabajo encomendado. Para realizar esta tarea, transforma el hardware disponible en recursos que ofrece al resto de componentes software para que puedan desempe\u00f1ar sus tareas. Pero ya no solo es el encargado de dotar de esos recursos al subsistema software, sino tambi\u00e9n al humano. Para cualquier usuario ser\u00eda costoso acceder directamente a los recursos que ofrece el hardware de un ordenador e intentar trabajar con \u00e9l directamente. Adem\u00e1s de la dificultad, una instrucci\u00f3n mal escrita podr\u00eda producir serios problemas en el hardware, la p\u00e9rdida de informaci\u00f3n o incluso el deterioro de alguno de los componentes del ordenador. Una tarea sencilla como guardar las modificaciones de un fichero, puede convertirse en una verdadera pesadilla para cualquier tipo de usuario. Por lo tanto, los sistemas operativos deben dotar de dos caracter\u00edsticas fundamentales para facilitar el uso del hardware de un ordenador:</p> <ul> <li>seguridad, debe actuar contra cualquier manipulaci\u00f3n accidental o premeditada que pueda da\u00f1ar la informaci\u00f3n contenida en el hardware, da\u00f1ar el propio hardware o provocar un funcionamiento indeseado del sistema. Existen ciertas instrucciones que pueden parar la m\u00e1quina y otras que realizan operaciones directamente sobre el hardware. El sistema operativo evita que el hardware quede en manos de los programas (aplicaciones). Para ello proporcionan dos estados, llamados estado protegido (kernel), en el cual se ejecuta el sistema operativo, y estado no protegido (usuario), que es el destinado a la ejecuci\u00f3n de los programas de aplicaci\u00f3n. De esta manera se impide que los programas puedan tener contacto directo con el hardware, o puedan forzar un incorrecto funcionamiento del sistema.</li> <li>abstracci\u00f3n, debe ocultar los detalles de m\u00e1s bajo nivel intentando dar a los niveles superiores una visi\u00f3n m\u00e1s sencilla, global y abstracta. Dota al usuario de operaciones para manipular dichas estructuras ocultas, desconociendo por completo la gesti\u00f3n interna de las mismas. Gracias a la abstracci\u00f3n, los sistemas operativos enmascaran los recursos f\u00edsicos, permitiendo su manejo con funciones m\u00e1s generales que ocultan las b\u00e1sicas, constituyendo verdaderos recursos virtuales.</li> </ul> <p></p> <ul> <li>Desde el punto de vista del usuario, el sistema operativo proporciona servicios que no est\u00e1n presentes en la m\u00e1quina subyacente. Estos servicios incluyen las facilidades de carga y ejecuci\u00f3n de programas, interacci\u00f3n entre el usuario y los programas, permitiendo que se ejecuten varios al mismo tiempo, gesti\u00f3n de la comunicaci\u00f3n y almacenamiento de datos y programas, entre otros muchos.</li> </ul>"},{"location":"#arquitectura-de-un-sistema-operativo","title":"Arquitectura de un sistema operativo","text":"<p>Estas dos funciones principales de los sistemas operativos, seguridad y abstracci\u00f3n, nos adelantan la estructura funcional de la mayor\u00eda de los sistemas operativos existentes. Al igual que el resto de \u00e1mbitos de la inform\u00e1tica, los sistemas operativos ha sufrido una evoluci\u00f3n dependiente, principalmente, del hardware en el que se asentaban. Cada nueva estructura de procesador deb\u00eda tener su propio sistema operativo para poder acceder a las funciones que dispon\u00eda.</p> <p>Este hecho, ligado a que la evoluci\u00f3n de los procesadores y sus arquitecturas se realizaba de forma profusa, daba con la presencia de numerosos sistemas operativos. Adem\u00e1s, estos primeros sistemas operativos no estaban dotados de una capa de abstracci\u00f3n tan desarrollada como los actuales, por los que la curva de aprendizaje de los mismos era lenta y tediosa. Afortunadamente la diversidad de arquitecturas de los procesadores, componente que determina el uso de un sistema operativo u otro, se ha reducido considerablemente. Adem\u00e1s, los desarrolladores de sistemas operativos publican versiones diferentes para cada una de estas arquitecturas. De esta forma podemos contar con la misma capa de abstracci\u00f3n en diferentes procesadores, hecho que reduce al m\u00ednimo la curva de aprendizaje.</p>"},{"location":"#arquitectura-monolitica","title":"Arquitectura monol\u00edtica","text":"<p>Los sistemas monol\u00edticos son la estructura m\u00e1s simple para un sistema operativo. Esta arquitectura fue escrita para proporcionar una m\u00e1xima funcionalidad y se caracteriza porque no tienen una estructura definida. Sus rutinas y funcionalidades (sistemas de archivos, gesti\u00f3n de memoria principal, gesti\u00f3n de procesos, etc\u00e9tera), se encuentran agrupados en un s\u00f3lo programa. Se trata de un conjunto de procedimientos o rutinas entrelazadas de tal forma que cada una tiene la posibilidad de llamar a las otras rutinas cada vez que as\u00ed lo requiera. Adem\u00e1s, todo el sistema al no tener una estructura definida, se ejecuta en el mismo nivel del n\u00facleo (kernel) lo que lo hace altamente vulnerable. Es por esta raz\u00f3n que cuando falla una de estas rutinas se produce un error en todo el sistema.</p> <p>Otro problema inherente es que si se modifica el hardware, se hace necesario recompilar el kernel para poder disponer de las nuevas funcionalidades, con el consumo de recursos que esta compilaci\u00f3n conlleva. Cada vez que un desarrollador a\u00f1ade una nueva caracter\u00edstica o corrige un error, significa que se necesitar\u00e1 hacer una recompilaci\u00f3n del n\u00facleo entero.</p> <p>El hecho de que en el espacio del kernel est\u00e1n incluidos todos los servicios b\u00e1sicos, tiene tres grandes inconvenientes:</p> <ul> <li>el tama\u00f1o del n\u00facleo, necesita m\u00e1s recursos del sistema para poder ser manejado y a medida que las exigencias crecen, \u00e9ste se convierte en un problema para el rendimiento del equipo.</li> <li>la falta de sostenibilidad, si se desea incluir nuevas funcionalidades se ha de recompilar todo el kernel, con el consumo de recursos pertinente.</li> <li>el dif\u00edcil mantenimiento, al igual que en el punto anterior, si se quiere revisar un error o cambiar alguna funcionalidad, se ha de recompilar todo el c\u00f3digo del n\u00facleo.</li> </ul> <p></p> <p>Actualmente, y a pesar de sus limitaciones, se siguen utilizando esta arquitectura como en sistemas operativos ad-hoc para algunos procesos de mecanizaci\u00f3n industrial, o en algunas distribuciones GNU/Linux. Algunos de los sistemas operativos monol\u00edticos son Unix, DOS, MacOS hasta su versi\u00f3n 8.6, GNU/Linux y dentro de la familia de Microsoft; Microsoft Windows 95, Microsoft Windows 98, Windows 98 Second Edition y Windows Millenium Edition.</p>"},{"location":"#la-arquitectura-de-micronucleo-o-microkernel","title":"La arquitectura de Micron\u00facleo o Microkernel","text":"<p>En este sistema las funciones vitales son manejadas por el n\u00facleo (kernel) y la interfaz de usuario es manejada por el entorno (shell). Ahora la diferenciaci\u00f3n entre n\u00facleo y shell se hace m\u00e1s patente ya que, en el modelo anterior, estas partes conviv\u00edan dentro del n\u00facleo. El Microkernel se encarga de todo el c\u00f3digo de un sistema, y de planificar los procesos e hilos (threads) con la finalidad de tener multitareas. Consiste en reducir el n\u00famero de partes del sistema operativo que se ejecutan en modo kernel, de esta forma el n\u00facleo del sistema operativo se hace m\u00e1s ligero.</p> <p>Dentro de esta estructura aparece el sistema cliente-servidor el cual hace la diferencia entre dos clases de procesos: los servidores (ubicados en el microkernel), cada uno de los cuales proporciona cierto servicio, y los clientes, que utilizan estos servicios.</p> <p>Esta arquitectura ofrece uniformidad de interfaces basada en el paso de mensajes. Es un modo de comunicaci\u00f3n para las solicitudes de los procesos. Si varios procesos deben solicitar al n\u00facleo alg\u00fan recurso, utilizar\u00e1n la misma forma de comunicaci\u00f3n por lo que ser\u00e1 m\u00e1s f\u00e1cil implementar nuevas funcionalidades.</p> <p>Adem\u00e1s, se reduce el n\u00facleo a instrucciones m\u00ednimas quedando la gesti\u00f3n de tareas casi todo en servidores. Para implementarlo en arquitecturas diferentes, s\u00f3lo hay que modificar el kernel reduciendo los costes de portabilidad. Tan s\u00f3lo es necesario modificar el peque\u00f1o n\u00facleo, dejando los servidores intactos. Esto tambi\u00e9n favorece la fiabilidad del sistema operativo, ya que es m\u00e1s f\u00e1cil corregir un sistema peque\u00f1o y se pueden realizar pruebas m\u00e1s rigurosas y r\u00e1pidas que en un sistema mucho m\u00e1s grande.</p> <p></p> <p>Algunos sistemas operativos que usan esta arquitectura son Minix de Andrew S. Tanenbaum y Symbian de Nokia.</p>"},{"location":"#la-arquitectura-por-capas-o-jerarquica-estructura-por-niveles","title":"La arquitectura por capas o jer\u00e1rquica (estructura por niveles)","text":"<p>Esta estructura queda definido por divisiones en capas o niveles, cuya organizaci\u00f3n es una jerarqu\u00eda de capas donde cada una de ellas ofrece una interfaz (comunicaci\u00f3n) clara y bien definida. En esta arquitectura la capa superior s\u00f3lo utiliza los servicios y funciones que ofrece la capa inferior, es decir, la capa n \u00fanicamente se comunica con la capa n-1 . La capa m\u00e1s interna o inferior (capa 0) corresponde al hardware, mientras que la m\u00e1s alta o externa corresponde a la interfaz de usuario donde se ejecutan los programas. Cuando la capa se encuentra m\u00e1s cerca de la capa 0, \u00e9sta tiene m\u00e1s privilegios que la capa superior, siendo la capa con menos privilegios la capa 5. El primer sistema construido de esta manera fue el sistema THE (Technische Hogeschool Eindhoven), desarrollado en Holanda por E. W. Dijkstra (1968) y sus estudiantes. El sistema original consta de 6 capas:</p> <ul> <li>capa 5, se encuentra la interfaz de usuario.</li> <li>capa 4, aloja los programas de usuario.</li> <li>capa 3, controla los dispositivos entrada y salida.</li> <li>capa 2, administra la comunicaci\u00f3n entre procesos y terminal.</li> <li>capa 1, administraci\u00f3n de memoria y discos.</li> <li>capa 0, correspondiente al hardware, realizando asignaci\u00f3n del procesador, alterna entre procesos cuando ocurren interrupciones o han expirado y proporciona multiprogramaci\u00f3n b\u00e1sica de la CPU.</li> </ul> <p></p> <p>La facilidad de construcci\u00f3n viene dada por la existencia de esta divisi\u00f3n en capas, de esta forma se produce una abstracci\u00f3n del problema, centr\u00e1ndose s\u00f3lo en la funci\u00f3n que realiza el m\u00f3dulo correspondiente a una capa n. No es necesario saber detalles de implementaci\u00f3n de las capas inferiores, s\u00f3lo conocer el modo en que se comunican, es decir, su interface. Adem\u00e1s, resulta m\u00e1s sencillo detectar errores ya que estos quedan adscritos a una capa determinado, exonerando al resto.</p> <p>Otro aspecto positivo relacionado con la estructura por capas, es que cuando ocurre un error o fallo en una de las capas, no se compromete a todo el sistema, s\u00f3lo a la capa relacionada con dicho error. De esta forma el sistema operativo es m\u00e1s robusto.</p>"},{"location":"#arquitectura-por-modulos","title":"Arquitectura por m\u00f3dulos","text":"<p>La mayor\u00eda de los sistemas operativos actuales implementan este enfoque. Lo que caracteriza este tipo de estructura es que el kernel se compone por m\u00f3dulos, y cada uno de estos m\u00f3dulos se encuentra separado de forma independiente. En caso de producirse un error, no afecta a los otros. Por ejemplo, si el m\u00f3dulo de software que se encarga del proceso del navegador se bloquea o es atacado, s\u00f3lo este proceso se ver\u00e1 afectado. El resto de las operaciones siguen sus funciones habituales. Los m\u00f3dulos se pueden cargar din\u00e1micamente en el n\u00facleo cuando se necesiten, bien en en tiempo de ejecuci\u00f3n (manual) o bien durante el arranque del sistema (autom\u00e1tico). El kernel dispone de los componentes fundamentales y se conectan directamente con los m\u00f3dulos.</p> <p>En general, esta estructura se parece bastante a la de capas, pero es mucho m\u00e1s flexible ya que cualquier m\u00f3dulo de esta estructura puede llamar a otro y no quedar limitado a sus capas adyacentes. El kernel de esta arquitectura tambi\u00e9n tiene las funciones esenciales, pero este es m\u00e1s eficiente ya que no necesita un mecanismo de paso de mensajes para comunicarse, s\u00f3lo interfaces conocidas y bien definidas. Todos los sistemas operativos utilizan esta arquitectura en mayor o menor medida, incluso aquellos que han apostado por una arquitectura diferente, han tomado aspectos de \u00e9sta para implementar sus funciones. GNU/Linux, por ejemplo, est\u00e1 basado y clasificado en la tecnolog\u00eda monol\u00edtica basado en un kernel potente y r\u00e1pido, pero tambi\u00e9n incluye caracter\u00edsticas cliente-servidor y modulares. Esto nos conduce, irremediablemente a la definici\u00f3n de una arquitectura que no es ninguna es s\u00ed misma, sino la uni\u00f3n de varias de ellas; la h\u00edbrida.</p>"},{"location":"#hibridas","title":"H\u00edbridas","text":"<p>Actualmente no existen una arquitectura \u00fanica para implementar todas las funcionalidades de los sistemas operativos modernos. Se habla de una arquitectura h\u00edbrida basada en el uso de ciertas caracter\u00edsticas de varias de las existentes. El uso de unas u otras caracter\u00edsticas depender\u00e1 de los desarrolladores aunque en el grueso de los casos se trata del uso de la estructura cliente-servidor, jerarquizada y con un kernel modular. Buen ejemplo son los sistemas operativos de la familia de Microsoft. Desde Microsoft Windows XP lanzado en el a\u00f1o 2001 hasta Microsoft Windows 10 en 2015.</p>"},{"location":"#evolucion-de-los-sistemas-operativos","title":"Evoluci\u00f3n de los sistemas operativos","text":"<p>Los sistemas operativos han estado estrechamente ligados con las sucesivas evoluciones del hardware. Por ese motivo al hablar de la evoluci\u00f3n del hardware en la inform\u00e1tica tambi\u00e9n se hace referencia a la evoluci\u00f3n de los sistemas operativos que lo acompa\u00f1aban. No hay unanimidad en cuanto al n\u00famero y duraci\u00f3n de las generaciones de sistemas operativos, a\u00fan as\u00ed la mayor\u00eda hablan de cinco generaciones:</p>"},{"location":"#generacion-cero","title":"Generaci\u00f3n Cero","text":"<p>A finales de los a\u00f1os 40 aparece de la primera generaci\u00f3n de ordenadores. En ellos se acced\u00eda directamente a la consola desde la cual se actuaba sobre una serie de micro interruptores que permit\u00edan introducir directamente el programa en la memoria del ordenador. En realidad al existir tan pocas unidades de estos ordenadores, todos podr\u00edan considerarse prototipos y cada constructor lo hac\u00eda sin seguir ning\u00fan criterio predeterminado. En estos momentos no exist\u00edan los sistemas operativos, y los programadores deb\u00edan interactuar con el hardware del ordenador sin ayuda externa. Esto hac\u00eda que el tiempo de preparaci\u00f3n para realizar una tarea fuera considerable, con la intenci\u00f3n de tener el programa listo antes de llegar a introducirlo en la m\u00e1quina.</p> <p>Cuando a un usuario le llegaba su tiempo de m\u00e1quina, ten\u00eda que apresurarse a introducir en el ordenador todas las fichas perforadas que conformaban su programa, ejecutarlo en el ordenador, vigilar su funcionamiento y esperar a que todas las operaciones terminaran.</p> <p>Aparece la figura del \u201coperador del ordenador\u201d, personas especializadas en ejecutar las rutinas de carga y descarga, con el fin de mantener el sistema con la m\u00e1xima ocupaci\u00f3n posible. De esta forma, al recibir dichos trabajos, los reun\u00eda y ejecutaba de forma secuencial consumiendo \u00fanicamente el tiempo que realmente necesitasen y evitando, en gran medida, los tiempos de inactividad del procesador.</p> <p></p>"},{"location":"#primera-generacion","title":"Primera Generaci\u00f3n","text":"<p>A principios de los a\u00f1os 50 con el objeto de facilitar la interacci\u00f3n entre persona y ordenador, es decir, a\u00f1adir una capa de abstracci\u00f3n para aislar al usuario de ciertas tareas del ordenador, los sistemas operativos hacen una aparici\u00f3n discreta y bastante simple. Se empieza a trabajar en conceptos tales como el monitor residente, el proceso por lotes y el almacenamiento temporal.</p> <ul> <li> <p>Monitor residente, su funcionamiento era bastante simple, se limitaba a cargar los programas en memoria, ley\u00e9ndolos de una cinta o de tarjetas perforadas, y ejecutarlos. El problema era encontrar una forma de optimizar el tiempo entre la retirada de un trabajo y el montaje del siguiente.</p> </li> <li> <p>Procesamiento por lotes, aparece como soluci\u00f3n para optimizar, en un mismo n\u00facleo de cinta o conjunto de tarjetas, la forma que se ejecutar\u00e1n uno a continuaci\u00f3n de otro sin perder apenas tiempo en la transici\u00f3n.</p> </li> <li>Almacenamiento temporal, cuyo objetivo era disminuir el tiempo de carga de los programas, haciendo simult\u00e1nea la carga del programa o la salida de datos con la ejecuci\u00f3n de la siguiente tarea. Para ello se utilizaban t\u00e9cnicas de buffering.</li> </ul> <p></p>"},{"location":"#segunda-generacion","title":"Segunda Generaci\u00f3n","text":"<p>Iniciada la d\u00e9cada de los 60, aparece el circuito integrado que incrementa la capacidad de procesado de los ordenadores existentes. A la par, aparecen varias t\u00e9cnicas de computo para optimizar esa nueva potencia de la que se dispon\u00eda.</p> <p>Una de ellas era la multiprogramaci\u00f3n. En estos sistemas la memoria principal alberga a m\u00e1s de un programa de usuario y los va reproduciendo de forma secuencial. Cuando un programa accede al procesador, se le asigna de forma \u00fanica. Pero cada uno de estos programas no s\u00f3lo estaba compuesto de accesos al procesador, sino que hab\u00eda operaciones de E/S (entrada salida) en las que el procesador permanec\u00eda ociosa. En lugar de esperar a que termine la operaci\u00f3n de E/S, se pasa a ejecutar otro programa. Si \u00e9ste realiza, a su vez, otra operaci\u00f3n de E/S, se mandan las \u00f3rdenes oportunas al controlador, y pasa a ejecutarse otro. De esta forma es posible, teniendo almacenado un conjunto adecuado de tareas en cada momento, utilizar de manera \u00f3ptima los recursos disponibles.</p> <p>El multiprocesador y multihilado tambi\u00e9n son t\u00e9cnicas que aparecieron en esta generaci\u00f3n. La primera hace referencia al uso de m\u00e1s de un procesador de forma simultanea. La segunda en dividir el programa en varios subprogramas que se puedan ejecutar de forma simult\u00e1nea. </p>"},{"location":"#tercera-generacion-anos-70-y-80","title":"Tercera Generaci\u00f3n (a\u00f1os 70 y 80)","text":"<p>Durante los a\u00f1os 70 y 80, y gracias al avance de la electr\u00f3nica se empezaron a crear circuitos con miles de transistores en un cent\u00edmetro cuadrado de silicio, lo que conducir\u00eda a producir los primeros sistemas integrados.</p> <p>Por lo que respecta a los sistemas operativos, se realiz\u00f3 un costoso trabajo para interponer una amplia capa de software entre el usuario y la m\u00e1quina, de forma que el primero no tuviese que conocer ning\u00fan detalle del hardware. Hasta entonces, el usuario deb\u00eda conocer un complejo lenguaje de control para realizar sus trabajos que depend\u00edan del la m\u00e1quina d\u00f3nde trabajara. Se empez\u00f3 decididamente a crear los primeros int\u00e9rpretes de comandos que facilitaban la tarea de controlar estas m\u00e1quinas. En definitiva, se empez\u00f3 a a\u00f1adir una capa de abstracci\u00f3n al hardware que reduc\u00eda la rapidez de las aplicaciones, pero se volv\u00edan m\u00e1s pr\u00e1cticos y simples para los usuarios.</p> <p>Otro avance importante que se estableci\u00f3 a mediados de la d\u00e9cada de 1980 fue el desarrollo de redes de computadoras personales que corr\u00edan sistemas operativos en red y sistemas operativos distribuidos.</p> <p>Esta d\u00e9cada se podr\u00eda definir como la de los sistemas de prop\u00f3sito general y en ella se desarrollan tecnolog\u00edas que se siguen utilizando en la actualidad. Es en esta generaci\u00f3n cuando se produce la proliferaci\u00f3n de los miniordenadores y la inform\u00e1tica se acerca al nivel de usuario. Surgen sistemas operativos tales como MULTICS (Multiplexed Information and Computing Service) y BDOS (Basic Disk Operating System), aunque fueron dos los que se usaban de forma mayoritaria. El primero fue MS-DOS (Microsoft Disk Operating System) que fue creado para IBM PC y el exitosos procesador 8088 de Intel. El segundo fue Unix que dominaba en los ordenadores que usaban el procesador Motorola 68000.</p> <p>IBM trat\u00f3, con su sistema operativo OS/2, de suceder a DOS como sistema operativo de los ordenadores. Se desarroll\u00f3 inicialmente de manera conjunta entre Microsoft e IBM, hasta que la primera decidi\u00f3 seguir su camino con su Windows e IBM se ocup\u00f3 en solitario de OS/2. Este sistema operativo ya no es comercializado por IBM, y su soporte se suspendi\u00f3 el 31 de diciembre de 2006. Se ha mantenido desde entonces con pocas novedades bajo el nombre eComStation.</p> <p>En 1984 se produjo el lanzamiento oficial del ordenador Macintosh, con un precio de 1.995 d\u00f3lares estadounidenses. Inclu\u00eda su sistema operativo Mac OS cuya caracter\u00edsticas novedosas era una GUI (Graphic User Interface), multitareas (usando la multiprogramaci\u00f3n) y rat\u00f3n (una novedad en la \u00e9poca). Provoc\u00f3 diversas reacciones entre los usuarios acostumbrados a la l\u00ednea de comandos ya que tan s\u00f3lo se conoc\u00eda este sistema para interactuar con el ordenador.</p> <p></p> <p>En definitiva, es en esta generaci\u00f3n cuando la inform\u00e1tica llega a los hogares gracias principalmente a un aumento de potencia de procesado y la creaci\u00f3n de una capa de abstracci\u00f3n que evitaba al usuario conocer la m\u00e1quina para darle instrucciones.</p>"},{"location":"#cuarta-generacion","title":"Cuarta generaci\u00f3n","text":"<p>A partir de la d\u00e9cada de los 90, se incorporan con una mayor o menor eficiencia diferentes t\u00e9cnicas, algunas descritas en este apartado; multiproceso, multiusuario, multitarea, abstracci\u00f3n, seguridad, integraci\u00f3n con redes entre otras. Un hecho fundamental en este etapa es la creaci\u00f3n de un sistema operativo libre. Hasta la fecha la mayor\u00eda de sistemas operativos se creaban para una arquitectura de m\u00e1quina determinada y se vend\u00eda con el hardware, hecho que se mantiene hasta la actualidad, aunque est\u00e1n tomando forma otro tipo de distribuciones.</p> <p>Impulsada por Richard Stallman y motivado por esta idea comienza la construcci\u00f3n y desarrollo de las herramientas elementales que componen un sistema operativo, a esta parte del desarrollo se le conoce como proyecto GNU (GNU is Not Unix).</p> <p>Esta etapa cuenta con la colaboraci\u00f3n de miles de programadores a nivel mundial. En 1991 aparece la primera versi\u00f3n del n\u00facleo Linux que fue creado por Linus Torvalds y consegu\u00eda ensamblar todas las herramientas elementales creadas por el proyecto GNU de una manera eficiente. De esta forma el proyecto termina llam\u00e1ndose GNU/Linux, dando un 50% de importancia a ambas partes.</p> <p>Otro hito importante en este per\u00edodo fue la aparici\u00f3n de Windows 95 que se le puede considerar un sistema operativo real, ya que Windows 3.11 s\u00f3lo era una interfaz gr\u00e1fica del MS-DOS. Microsoft es hoy en d\u00eda la propietaria de los sistemas operativos m\u00e1s difundido en el \u00e1mbito dom\u00e9stico y profesional.</p> <p>En 2009 Google anuncia su propio sistema operativo, el cual es nombrado Google Chrome OS (o simplemente abreviado Chrome OS). Es un sistema operativo diferente a lo que se conoce com\u00fanmente como sistema operativo de escritorio, siendo el navegador Google Chrome el centro sobre el que gira su uso. Est\u00e1 dise\u00f1ado de tal forma que el usuario pueda conectarse a Internet en cuesti\u00f3n de segundos. Contar\u00e1 con soporte para procesadores x86 y ARM, y con el soporte de una gran lista de fabricantes de hardware y software. Adem\u00e1s, es de c\u00f3digo libre, es decir, el c\u00f3digo fuente se encuentra disponible para todos los usuarios (este concepto se tratar\u00e1 en la siguiente unidad).</p> <p>Una de las tendencias actuales es la creaci\u00f3n de sistemas operativos que integren todos los dispositivos que un usuario utiliza a diario. Con esta iniciativa nace Windows 10 en 2015 que, haciendo uso de Internet, es capaz de mantener sincronizados varios dispositivos con los mismos datos de usuario.</p>"},{"location":"#funciones-de-los-sistemas-operativos","title":"Funciones de los sistemas operativos","text":"<p>Atendiendo a la definici\u00f3n de sistema operativo, ser\u00eda interminable enumerar sus funciones. No obstante, haciendo una labor de s\u00edntesis se pueden destacar las siguientes:</p>"},{"location":"#gestion-de-procesos","title":"Gesti\u00f3n de procesos","text":"<p>Un proceso es un recurso necesario para que un programa haga la tarea que el usuario u otro programa le haya encomendado. Estos elementos deben estar contenidos en la memoria principal y contar con acceso al procesador. El sistema operativo, para encargarse de su buen funcionamiento, se dedica a crear y destruir procesos, pararlos y reanudarlos y ayudar con los mecanismos de comunicaci\u00f3n entre ellos.</p>"},{"location":"#gestion-de-la-memoria-principal","title":"Gesti\u00f3n de la memoria principal","text":"<p>La memoria es un almac\u00e9n de datos vol\u00e1til compartido por el procesador y las aplicaciones. Toda aplicaci\u00f3n (proceso) que se est\u00e9 ejecutando debe estar contenida en la memoria principal. De este modo la comunicaci\u00f3n con el procesador se realiza de forma m\u00e1s r\u00e1pida. El sistema operativo se asegura de que parte de la memoria est\u00e1 siendo utilizada, decide d\u00f3nde se colocan los procesos cuando haya un hueco libre y asigna y reclama el espacio que sea necesario para que se optimice este recurso.</p>"},{"location":"#gestion-de-la-memoria-secundaria","title":"Gesti\u00f3n de la memoria secundaria","text":"<p>Al igual que con la memoria principal, el sistema operativo se encarga de gestionar el espacio libre y asigna el orden de guardado. Utiliza el sistema de ficheros para gestionar el dispositivo de almacenamiento no vol\u00e1til (discos duros, lectores \u00f3pticos o almacenamiento en la nube). La informaci\u00f3n contenida en esta memoria, ha de ser transferida a la memoria principal para ser procesada. Esto es debido a la escasa velocidad de lectura y escritura que estos dispositivos poseen.</p>"},{"location":"#gestion-de-dispositivos","title":"Gesti\u00f3n de dispositivos","text":"<p>Tiene como objetivo proporcionar una interfaz de alto nivel de los dispositivos de E/S sencilla de utilizar. En algunos sistemas operativos esta interfaz es semejante a la de los ficheros, como por ejemplo en GNU/Linux.</p>"},{"location":"#clasificacion-de-los-sistemas-operativos","title":"Clasificaci\u00f3n de los sistemas operativos","text":"<p>Existen numerosas clasificaciones de los sistemas operativos atendiendo a muy diversos factores como la forma de ofrecer sus servicios, el n\u00famero de usuarios simult\u00e1neos, el n\u00famero de tareas que es capaz de ejecutar o su estructura interna.</p>"},{"location":"#tipos-segun-su-estructura-interna","title":"Tipos seg\u00fan su estructura interna","text":"<p>Hacen referencia a la arquitectura que lo compone y, como ya se ha visto con anterioridad, consta de los siguientes elementos: monol\u00edticos, con microkernel, jerarquizados, modulares o h\u00edbridos. La mayor\u00eda de los sistemas operativos actuales se enmarcan dentro de este \u00faltimo apartado.</p>"},{"location":"#tipos-en-funcion-del-manejo-de-recursos","title":"Tipos en funci\u00f3n del manejo de recursos","text":"<ul> <li>Centralizado, permite la administraci\u00f3n de los recursos de un solo ordenador. Pr\u00e1cticamente todos los sistemas operativos comerciales lo son de este tipo.</li> <li>Distribuido, permite la administraci\u00f3n de los recursos de m\u00e1s de un ordenador de forma simult\u00e1nea, es la uni\u00f3n l\u00f3gica de un grupo de sistemas operativos sobre una colecci\u00f3n de ordenadores independientes, conectados en red y f\u00edsicamente separados. Cada ordenador contiene de forma individual un subconjunto espec\u00edfico de los programas que componen el sistema operativo distribuido. Este tipo de sistemas es altamente complicado de gestionar e implementar por lo que su uso queda adscrito a tareas muy concretas. Los primeros sistemas distribuidos fueron el DYSEAC en 1954 y el Lincoln TX-2000.</li> </ul>"},{"location":"#tipos-en-funcion-de-la-administracion-de-tareas-y-usuarios","title":"Tipos en funci\u00f3n de la administraci\u00f3n de tareas y usuarios","text":"<p>Es la clasificaci\u00f3n m\u00e1s com\u00fanmente usada y conocida desde el punto de vista del usuario. Seg\u00fan el n\u00famero de usuarios:</p> <ul> <li>monousuario, soportan a un usuario de forma simult\u00e1nea, sin importar el n\u00famero de procesadores que tenga el ordenador o el n\u00famero de procesos o tareas que el usuario pueda ejecutar en un mismo instante de tiempo.</li> <li>multiusuario, dan servicio a m\u00e1s de un usuario a la vez, ya sea por medio de varias terminales conectadas a el ordenador o por medio de sesiones remotas en una red de comunicaciones. No importa el n\u00famero de procesadores en la m\u00e1quina ni el n\u00famero de procesos que cada usuario puede ejecutar simult\u00e1neamente.</li> </ul> <p>Seg\u00fan el n\u00famero de procesos (tareas) realizados de forma simult\u00e1nea:</p> <ul> <li>monotarea, s\u00f3lo permiten una tarea de forma simult\u00e1nea (al margen de los procesos propios del sistema operativo). Si se quiere ejecutar otra tarea habr\u00e1 que esperar a finalizar la actual o interrumpirla. Todos los recursos del sistema son para esta tarea en el momento de su ejecuci\u00f3n. Resulta ineficaz ya que si esta tarea entra en bucle, es posible que el usuario nunca recupere el control del sistema.</li> <li>multitarea, permiten al usuario estar realizando varios procesos simult\u00e1neamente. Este tipo de sistemas operativos normalmente asigna los recursos disponibles de forma alternada a los procesos que los solicitan, de manera que el usuario percibe que todos funcionan de forma concurrente. Es com\u00fan encontrar en ellos interfaces gr\u00e1ficas orientadas al uso de men\u00fas y el rat\u00f3n, lo cual permite un r\u00e1pido intercambio entre las tareas para el usuario, mejorando su productividad.</li> </ul> <p>Seg\u00fan el n\u00famero de procesadores que es capaz de manejar:</p> <ul> <li>monoproceso, es capaz de manejar solamente un procesador, de manera que si el ordenador tuviese m\u00e1s de uno, le ser\u00eda in\u00fatil.</li> <li>multiproceso, puede de manejar m\u00e1s de un procesador en el sistema, distribuyendo la carga de trabajo entre todos los procesadores que existan en el sistema. Generalmente estos sistemas trabajan de dos formas:</li> <li>asim\u00e9tica, el sistema operativo selecciona a uno de los procesadores el cual jugar\u00e1 el papel de procesador maestro y servir\u00e1 como pivote para distribuir la carga a los dem\u00e1s procesadores, que reciben el nombre de esclavos o secundarios.</li> <li>sim\u00e9trica, los procesos son enviados indistintamente a cualquiera de los procesadores disponibles, teniendo, te\u00f3ricamente, una mejor distribuci\u00f3n y equilibrio en la carga de trabajo bajo este esquema.</li> </ul> <p>Un aspecto importante a considerar en estos sistemas es la forma de crear aplicaciones para aprovechar varios procesadores. Las aplicaciones programadas para correr en sistemas monoproceso no ofrecen ninguna ventaja a menos que el sistema operativo detecte secciones de c\u00f3digo paralelizable, los cuales son ejecutados al mismo tiempo en procesadores diferentes.</p> <p>Por otro lado, el programador puede modificar sus algoritmos y aprovechar por s\u00ed mismo esta facilidad. Esta opci\u00f3n, muy a menudo, es muy costosa y tediosa, obligando al programador a ocupar gran parte del tiempo de desarrollo a la paralelizaci\u00f3n.</p>"},{"location":"#tipos-en-funcion-del-modo-de-ofrecer-sus-recursos","title":"Tipos en funci\u00f3n del modo de ofrecer sus recursos","text":"<p>Esta clasificaci\u00f3n est\u00e1 basada en la estructura de explotaci\u00f3n de sistemas cliente-servidor. En ella existen ordenadores en el sistema que ofrecen y administran recursos a otros equipos. Por otra parte tambi\u00e9n existen otros equipos que usan estos servicios para llevar a cabo sus tareas.</p> <p>Esta explotaci\u00f3n de sistemas empez\u00f3 a cobrar importancia con la proliferaci\u00f3n de las redes de ordenadores. Las ventajas de usar estas t\u00e9cnicas son evidentes, pero tambi\u00e9n exceden de las intenciones de este apartado:</p> <p>-sistemas operativos de red, permite la interconexi\u00f3n de ordenadores para poder acceder a los servicios y recursos, hardware y software, creando redes de computadoras. Estos sistemas operativos centralizan los recursos, administran el acceso a la informaci\u00f3n, protegen los datos y establecen pautas de seguridad que el resto de ordenadores de la red debe aceptar. Esta configuraci\u00f3n se denomina servicios de directorio y se abordar\u00e1 de forma profusa en lo sucesivo.</p> <p>-sistemas operativos cliente, permite al acceso a los recursos compartidos administrados por un sistema operativo de red.</p> <p>Frecuentemente son los denominados \u201cde escritorio\u201d y deben cumplir los requerimientos de la red en la que se encuentran inmersos.</p> <p>La relaci\u00f3n entre estos dos tipos de sistemas operativos es el objetivo fundamental de este m\u00f3dulo y se tratar\u00e1 de forma pormenorizada en las siguientes unidades.</p>"},{"location":"#tipos-de-aplicaciones","title":"Tipos de aplicaciones","text":"<p>No resulta sencillo la clasificaci\u00f3n de todo el tipo de software que existe en la actualidad, ya que cada uno de estos programas responde a una necesidad espec\u00edfica, posee una arquitectura diferente o un dise\u00f1o tan personalizado que no encajar\u00eda en ninguna clasificaci\u00f3n posible. No obstante, s\u00ed es posible agrupar la mayor\u00eda del software, a grandes rasgos, dependiendo de la posici\u00f3n que ocupen con respecto al sistema operativo:</p> <ul> <li>software de sistemas, encargados de la gesti\u00f3n del hardware de forma directa o a la creaci\u00f3n de herramientas para el desarrollo de software, ya sea de sistemas o de aplicaci\u00f3n.</li> <li>sistemas operativos, como ya se ha visto, es el software encargado de la administraci\u00f3n de los recursos y la seguridad.</li> <li>firmware, software integrado en el propio hardware que controla. Se trata de una serie de instrucciones que ofrece al sistema operativo para que \u00e9ste pueda ser controlado.</li> <li>controladores, definen lo que un hardware es capar de hacer. Es preciso que el sistema operativo entienda lo que el controlador le comunica, por ese motivo existen diferentes versiones de controladores, casi una por sistema operativo.</li> <li>desarrollo de sistemas, es el software encargado de crear aplicaciones nuevas que resuelvan una tarea en concreto</li> <li>software de aplicaci\u00f3n, todo el software que permite realizar alguna tareas que no coincida con las descritas con anterioridad. Esta categor\u00eda representa casi el 90 % del software y es posible dividirlo en dos grandes grupos:</li> <li>aplicaciones de prop\u00f3sito general, elaborado para resolver problemas generales y que habitualmente es el usuario el que debe adaptarse al funcionamiento de este software. Actualmente ofrece innumerable opciones de configuraci\u00f3n y personalizaci\u00f3n capaces de adaptar casi cualquier comportamiento. Se trata de aplicaciones como procesadores de texto, editores de im\u00e1genes, video o audio, gesti\u00f3n de bases de datos y un largo etc\u00e9tera.</li> <li>software espec\u00edficos de aplicaci\u00f3n, o aplicaciones de prop\u00f3sito espec\u00edfico, son aquellas dise\u00f1adas para la resoluci\u00f3n de una tarea tan espec\u00edfica que las aplicaciones de prop\u00f3sito general no son capaces de dar servida cuenta. Procesos de automatizaci\u00f3n industrial, sistemas de gesti\u00f3n de una empresa o aplicaciones de rob\u00f3tica son aplicaciones tan espec\u00edficas que son necesarias crearlas desde cero para que se adapten a las necesidades que las demandan.</li> </ul> <p></p>"},{"location":"#licencias-de-software","title":"Licencias de software","text":"<p>Como administradores de un sistema inform\u00e1tico, una de las tareas que se debe desempe\u00f1ar es la adquisici\u00f3n de software para los equipos. Elegir un software u otro depende de muchos factores, como su precio, su compatibilidad, su curva de aprendizaje, la formaci\u00f3n de los empleados y los costes de mantenimiento o ampliaci\u00f3n, entre otros. Existen otros factores que a menudo se obvian a la hora de adquirir el software: su licencia. Es un factor clave a la hora de seleccionar que aplicaciones ser\u00e1n las m\u00e1s indicadas para el sistema inform\u00e1tico.</p> <p>Esta elecci\u00f3n determina el radio de acci\u00f3n de los t\u00e9cnicos. Algunas licencias permiten la modificaci\u00f3n del software para adaptarse a las funciones del sistema inform\u00e1tico, otras la limitan, algunas no permiten corregir errores a pesar de contar con las herramientas y conocimientos necesarios, en otras no permiten acceder al c\u00f3digo fuente de la aplicaci\u00f3n. Es un factor a tener muy en cuenta a la hora de elegir como construiremos el subsistema software de nuestra infraestructura.</p> <p>Pero \u00bfqu\u00e9 es una licencia de software?. Una licencia de software es un conjunto de permisos que el propietario de los derechos de explotaci\u00f3n le otorga al usuario que lo adquiere. Estos derechos se centran en determinar las caracter\u00edsticas de uso y distribuci\u00f3n del mismo. Adem\u00e1s suelen definir tambi\u00e9n los plazos de duraci\u00f3n y el territorio donde se aplica la licencia, ya que la legislaci\u00f3n en este \u00e1mbito var\u00eda en cada pa\u00eds. Por lo tanto, es imprescindible comprobar que permite hacer la licencia del software que se vaya a adquirir. Esto limitar\u00e1, junto con el resto de caracter\u00edsticas del software, la idoneidad de uno u otro.</p>"},{"location":"#clasificacion-de-licencias-de-software","title":"Clasificaci\u00f3n de licencias de software","text":"<p>Existen infinidad de licencias de software. Hay que tener en cuenta que es el propietario de la licencia el que establece las condiciones de uso, distribuci\u00f3n y mantenimiento de su software. En este sentido cualquier clasificaci\u00f3n resultar\u00eda interminable. A\u00fan as\u00ed, coexisten un abanico de ellas que los desarrolladores pueden escoger si sus exigencias encajan con sus caracter\u00edsticas. En funci\u00f3n de los derechos que cada propietario se reserva sobre su software, encontramos:</p> <ul> <li> <p>Licencias de software de c\u00f3digo abierto (software libre), en general, dotan al usuario de libertad para crear una obra derivada (modificar, adaptar el software a las necesidades del sistema inform\u00e1tico), redistribuir e incluso vender el programa sin el consentimiento expreso del propietario de los derechos. Este software se distribuye junto con el c\u00f3digo fuente para que el usuario pueda ejercer estos derechos. Existen numerosas variaciones de estos privilegios de usuario, lo que se traduce en una divisi\u00f3n de licencias:</p> </li> <li> <p>licencias permisivas, con las que se puede crear una obra derivada sin que el resultado est\u00e9 obligado a protecci\u00f3n alguna. Es decir, se puede generar un software nuevo basado en el c\u00f3digo del original y el resultado no tener la misma licencia. Una vez creada la obra derivada puede mantener su licencia original, puede ser m\u00e1s restrictiva o incluso menos</p> </li> <li> <p>licencias robustas (con copyleft), que aplican algunas restricciones a las obras derivadas, que a su vez se dividen en dos tipos:</p> <ul> <li>fuertes, contienen una cl\u00e1usula que obliga a que las obras derivadas o modificaciones que se realicen al software se deban licenciar bajo los mismos t\u00e9rminos y condiciones de la obra original.</li> <li>d\u00e9biles, contienen una cl\u00e1usula que obliga a que las modificaciones que se realicen al software se deban licenciar bajo los mismos t\u00e9rminos y condiciones de la obra original, pero que las obras derivadas puedan ser licenciadas bajo otros t\u00e9rminos y condiciones distintas</li> </ul> </li> <li> <p>Licencias de software de c\u00f3digo cerrado (software propietario o privativo), los propietarios de los derechos establecen los derechos de uso, redistribuci\u00f3n, copia, modificaci\u00f3n, cesi\u00f3n y cualquier otra consideraci\u00f3n que considere necesaria. Estas obras est\u00e1n protegidas por derechos de autor o Copyright, y eludir estas restricciones se encuentra tipificado como delito contra la propiedad intelectual.   No permiten acceso al c\u00f3digo fuente y por lo tanto, que el software sea modificado, desensamblado, copiado o distribuido de formas no especificadas en la propia licencia. Tambi\u00e9n regula el n\u00famero de copias que pueden ser instaladas e incluso los fines concretos para los cuales puede ser utilizado. Por lo general se ofrecen servicios de soporte t\u00e9cnico y actualizaciones para que el programa funcione de forma correcta. Existen licencias de c\u00f3digo cerrado como el shareware y freeware, que ofrecen al usuario la posibilidad de usar su software con ciertas limitaciones funcionales o temporales.</p> </li> <li> <p>software de dominio p\u00fablico, el cual permite su uso, copia, modificaci\u00f3n o redistribuci\u00f3n con o sin lucro. En realidad todo software contenido en esta categor\u00eda no posee licencia alguna y queda a elecci\u00f3n del usuario qu\u00e9 hacer con \u00e9l.   El dominio p\u00fablico contiene, en realidad, todas la obras que tras un determinado tiempo de explotaci\u00f3n, han perdido su licencia. En esencia, cuando una obra pasa a formar parte del dominio p\u00fablico, pierde todas las limitaciones que pose\u00eda.   La creaci\u00f3n de una obra, no solo de software sino de cualquier otra \u00edndole, es un proceso de conjunci\u00f3n. El autor la crea basado en sus experiencias, conocimientos e idiosincrasia y todos sus conocimientos han salido, de alguna u otra manera, del dominio p\u00fablico. Algunos autores han amasado inmersas fortunas aprovechando lo que el dominio p\u00fablico les ofrec\u00eda, dotando a sus obras derivadas, eso s\u00ed, de su propia personalidad.</p> </li> </ul>"},{"location":"#sistemas-operativos-libres-y-propietarios","title":"Sistemas operativos libres y propietarios","text":"<p>Resulta evidente que un ordenador sin software que lo gestione, especialmente el sistema operativo, no es m\u00e1s que un objeto de decoraci\u00f3n medianamente caro. El sistema operativo nos permite usar las caracter\u00edsticas que el hardware pone a disposici\u00f3n del usuario, es por tanto, un binomio indisoluble. Siendo as\u00ed, se nos podr\u00eda plantear la inquietud de saber que est\u00e1 haciendo el sistema operativo con el hardware, como lo gestiona, la administraci\u00f3n de los recursos o incluso c\u00f3mo se comunica con \u00e9l. Esta idea puede llegar a ser preocupante si la trasladamos a la informaci\u00f3n que contiene el hardware. \u00bfC\u00f3mo guarda la informaci\u00f3n de mis archivos en el disco duro?, \u00bfqu\u00e9 medidas de seguridad toma para que mis fotos no se pierdan?, \u00bfhay alguien m\u00e1s escuchando mi colecci\u00f3n de m\u00fasica en mp3?, en definitiva \u00bfqu\u00e9 est\u00e1 haciendo el sistema operativo con la informaci\u00f3n del usuario?. Existen dos tendencias a la hora de trabajar con el software y m\u00e1s concretamente con los sistemas operativos; el software libre y el propietario. Como se ver\u00e1 a continuaci\u00f3n, ambas presentan sus ventajas e inconvenientes y ser\u00e1 el usuario quien decida qu\u00e9 enfoque quiera dar al tratamiento de su informaci\u00f3n.</p> <p>Unix ha sido uno de los sistemas operativos que m\u00e1s ha influenciado en la historia de la inform\u00e1tica y constituye los fundamentos t\u00e9cnicos y, en gran parte filos\u00f3ficos, sobre los cuales se desarroll\u00f3 el software libre a principios de la d\u00e9cada de los 80. En 1969, Ken Thompson y Dennis Ritchie, dos ingenieros de los laboratorios Bell de AT&amp;T, crearon la primera versi\u00f3n del sistema operativo Unix. Entre las caracter\u00edsticas que lo hac\u00edan un verdadero avance en su tiempo destacan la posibilidad de utilizarlo en diferentes plataformas de hardware y su capacidad multiusuario y multiproceso.</p> <p>Era un software que deb\u00eda ser mantenido por los propios usuarios. As\u00ed naci\u00f3 la primera comunidad que intentaba solucionar problemas fomentando el intercambio de informaci\u00f3n a trav\u00e9s de diferentes foros y debates. Adem\u00e1s, AT&amp;T tambi\u00e9n facilitaba una copia del c\u00f3digo fuente de Unix, inicialmente por muy poco dinero, lo que permiti\u00f3 que el sistema pudiera ser adaptado en las universidades.</p> <p>Una de las que fue pionera en la adopci\u00f3n y desarrollo de Unix fue la Universidad de Berkeley. En 1978, liber\u00f3 la primera versi\u00f3n del Unix BSD (Berkeley software Distribution) que inclu\u00eda varias herramientas dise\u00f1adas en la propia universidad y que mejoraba considerablemente la versi\u00f3n original. Esta revisi\u00f3n de Unix se distribu\u00eda de forma gratuita y acompa\u00f1ado del c\u00f3digo fuente. En 1979, AT&amp;T public\u00f3 la versi\u00f3n 7 de su Unix y empez\u00f3 a poner grandes trabas en la distribuci\u00f3n del c\u00f3digo fuente. Desde Berkeley siguieron innovando, desarrollando mejoras y ofreciendo versiones de Unix BSD de c\u00f3digo libre. La microinform\u00e1tica empez\u00f3 a llegar las empresas con la proliferaci\u00f3n de equipos de escasa capacidad de c\u00f3mputo pero independientes y sobre todo a un precio accesible. Todos esos equipos necesitaban un sistema operativo para funcionar y es aqu\u00ed donde se produce una bifurcaci\u00f3n en el camino que el software deb\u00eda recorrer; los que apostaron por ocultar el c\u00f3digo a sus competidores con el objetivo de posicionarse en un incipiente mercado, y los que siguieron ofreciendo el c\u00f3digo junto a su software por que pensaban que \u00e9ste era una herramienta necesaria y como tal, deb\u00eda ser libre y accesible a todos los usuarios. A pesar que parece que estos caminos se alejan a medida que pasa el tiempo, su relaci\u00f3n es muy estrecha y en muchas ocasiones dependiente.</p>"},{"location":"#el-camino-de-la-transparencia-y-la-cooperacion-entre-hackers-el-software-libre","title":"El camino de la transparencia y la cooperaci\u00f3n entre hackers: el software libre","text":"<p>Muchos de los desarrolladores, preocupados ante la p\u00e9rdida de libertades que se estaba produciendo, decidieron defender las libertades que se consideraban esenciales para el usuario, ya que sin sistema operativo (y software en general), no existen un ordenador funcional. El 27 de septiembre de 1983 Richard Stallman, muy preocupado por esta p\u00e9rdida de libertades y que m\u00e1s tarde acu\u00f1ar\u00eda el t\u00e9rmino software libre, anunciaba en el foro Usenet net-unix.wizards, que empezaba a trabajar sobre una implementaci\u00f3n libre de un sistema inspirado en Unix que denominar\u00eda GNU y que estar\u00eda libre de c\u00f3digo de AT&amp;T. Se trat\u00f3 de una implementaci\u00f3n desde cero sin interferencias legales de AT&amp;T. En el mensaje, Stallman explicaba detalladamente su experiencia como desarrollador de sistemas y ped\u00eda la ayuda de todo el mundo que quisiera ofrecer parte de su tiempo, dinero o hardware. El 1984, Stallman cre\u00f3 la Free software Foundation (FSF) con el objetivo de gestionar todas las colaboraciones que obtuvo de aquel mensaje. Una de los motivos que arrastraron a los desarrolladores a colaborar con esta organizaci\u00f3n fue la definici\u00f3n que Richard Stallman realiz\u00f3 de software libre. \u00c9sta se cimienta en la cooperaci\u00f3n, la transparencia y garantiza las cuatro libertades b\u00e1sicas que cualquier programa considerado libre debe proporcionar:</p> <ul> <li>0: libertad para utilizar el programa para cualquier prop\u00f3sito.</li> <li>1: libertad para poder estudiar c\u00f3mo funciona el programa.</li> <li>2: libertad para redistribuir el programa.</li> <li>3: libertad para hacer modificaciones y distribuir las mejoras.</li> </ul> <p>Para dar servida cuenta de estas libertades, es preciso el acceso al c\u00f3digo fuente. Durante los 80 Richard Stallman continu\u00f3 con el desarrollo de las herramientas necesarias para crear un sistema operativo completamente libre. Desde sus inicios identific\u00f3 la necesidad de crear las protecciones jur\u00eddicas necesarias. Por lo que en 1989, public\u00f3 la versi\u00f3n 1.0 de la licencia GPL (General Public License). Fue una herramienta indispensable ya que era muy com\u00fan que algunos programadores cogieran c\u00f3digo que era software libre, realizaban modificaciones y no aportaban estas modificaciones a la comunidad.</p> <p>En 1991, un estudiante finland\u00e9s de 21 a\u00f1os llamado Linus Torvalds publicaba su propio n\u00facleo de sistema operativo inspirado en Unix que m\u00e1s tarde se denominar\u00eda Linux. R\u00e1pidamente, muchos hackers se sumaron en un esfuerzo colectivo para ayudarle a mejorar el n\u00facleo del sistema operativo. \u00c9ste era precisamente el armaz\u00f3n que le faltaba al sistema GNU de Richard Stallman. Los hackers de Linux fueron adaptando las herramientas de GNU a su n\u00facleo y crearon las primeras distribuciones GNU/Linux. Estas distribuciones inclu\u00edan Linux y todas las herramientas necesarias para que el usuario lo pudiera utilizar. Linux se ha convertido en el buque insignia del movimiento del software libre, ya que es un sistema operativo completamente libre que incluye todo tipo de herramientas para servidores y usuarios finales.</p> <p>El software libre ha tenido un papel fundamental en el crecimiento de Internet, ya que su infraestructura se basa en protocolos de comunicaci\u00f3n abiertos. La inmensa mayor\u00eda servidores web emplean Apache, otro gran n\u00famero usan SendMail para gestionar el env\u00edo de correo electr\u00f3nico y pr\u00e1cticamente la totalidad de los servidores de nombres (DNS) utilizan el programa BIND o derivados de su c\u00f3digo fuente. Sin la existencia del software libre Internet hoy en d\u00eda probablemente no existir\u00eda, o al menos no existir\u00eda tal y como se conoce. Ha sido igualmente importante el hecho de que los protocolos que definen la arquitectura de Internet sean abiertos y que no hayan sido controlados por ninguna empresa.</p>"},{"location":"#el-camino-de-la-rentabilidad-y-la-ocultacion-el-software-propietario","title":"El camino de la rentabilidad y la ocultaci\u00f3n: el software propietario","text":"<p>La explosi\u00f3n de la microinform\u00e1tica a principio de los a\u00f1os 80 trajo consigo un descenso de precio de los sistemas inform\u00e1ticos y su popularizaci\u00f3n entre las empresas. Todas aquellas m\u00e1quinas requer\u00edan un sistema operativo para funcionar, y se gener\u00f3 una necesidad. Fruto de ella aparecieron las primeras compa\u00f1\u00edas de software. Estas empresas comenzaron a negar el acceso a los usuarios y a otros desarrolladores al c\u00f3digo fuente de las aplicaciones que desarrollaban, para conseguir una ventaja competitiva frente a sus rivales. En ese momento se rompi\u00f3 la tradici\u00f3n de compartir el c\u00f3digo que hab\u00eda imperado hasta entonces y consecuentemente con la propia \u00e9tica hacker.</p> <p>Se fue extendiendo ese modelo de c\u00f3digo cerrado en el cual el software se ofrec\u00eda sin el c\u00f3digo fuente, y recortando cada vez m\u00e1s las libertades a los usuarios los cuales estaban obligados a adquirir una licencia. El usuario pasaba de ser propietario del software a tener su usufructo, eso s\u00ed, pagando un alquiler a modo de licencia.</p> <p>Este tipo de software tuvo un especial expansi\u00f3n entre las empresas ya que, aunque se trataba un producto de pago, ofrec\u00edan una serie de ventajas a las que el software libre no llegaba. El software pasaba un control de calidad, ofrec\u00eda soporte y soluciones espec\u00edficas para cada aspecto de la empresa. Mucho de este software se convirti\u00f3 e uso com\u00fan entre hasta la actualidad.</p> <p>Innumerables han sido las empresas de software que han aparecido desde estos inicios, pero huelga decir que las m\u00e1s importantes han sido (y algunas lo siguen siendo) Microsoft, Oracle, AT&amp;T, Apple, Sun, International Business Machines (IBM) entre otras.</p>"},{"location":"#todo-son-ventajas-e-inconvenientes","title":"Todo son ventajas e inconvenientes","text":"<p>Actualmente estos dos modelos coexisten en la mayor\u00eda de casos y de una manera eficaz. Se puede reducir el coste del software de servidor a trav\u00e9s de una soluci\u00f3n de c\u00f3digo abierto, mientras que los clientes ejecuten un sistema operativo privativo de Microsoft e, instalado en \u00e9ste, aplicaciones ofim\u00e1ticas de software libre.</p> <p>Ventajas del software libre:</p> <ul> <li>bajo coste de adquisici\u00f3n y uso, a veces este coste se reduce a cero.</li> <li>independencia del proveedor, se dispone del c\u00f3digo fuente.</li> <li>requisitos de hardware menores, especialmente en sistemas operativos.</li> <li>adaptabilidad del software, a cualquier situaci\u00f3n o escenario.</li> </ul> <p>Desventajas del software libre:</p> <ul> <li>curva de aprendizaje mayor, lo que puede repercute en un aumento de costos.</li> <li>no posee ninguna garant\u00eda, es responsabilidad del usuario usarlo.</li> <li>interfaces y configuraci\u00f3n poco intuitivas, si se considera como \u201cmodelo\u201d la interfaz creada por Microsoft.</li> <li>confusi\u00f3n en el usuario, la diversidad de distribuciones, las diferentes licencias de uso y la variedad de herramientas para un mismo prop\u00f3sito a veces abruman y confunden al usuario.</li> </ul> <p>Ventajas del software propietario:</p> <ul> <li>control de calidad, por lo general el software para unas pruebas antes de ser ofrecido a los usuarios.</li> <li>curva de aprendizaje menor, muchos usuarios han aprendido a usar la GUI de una determinada compa\u00f1\u00eda.</li> <li>soporte de producto y garant\u00eda, ante cualquier eventualidad los propietarios de la licencia ofrecen una soluci\u00f3n y adem\u00e1s se comprometen a tener el software actualizado.</li> </ul> <p>Desventajas del software propietario</p> <ul> <li>imposibilitad de acceso al c\u00f3digo, es imposible adaptar el software sin pasar por el equipo de desarrollo que lo cre\u00f3.</li> <li>adaptaci\u00f3n inversa, en numerosas ocasiones es el modus operandi de los usuarios el que se adapta al software y no al contrario.</li> <li>formaci\u00f3n costosa, si el software no goza de mucha popularidad, la formaci\u00f3n suele depender de la empresa que lo ofrece.</li> </ul> <p>La licencia de un software a utilizar en el sistema inform\u00e1tico debe pesar en la decisi\u00f3n casi tanto como el hardware de los equipos. Una mala elecci\u00f3n del software puede estrangular o dificultar su crecimiento.</p>"},{"location":"virtual/","title":"Virtualizaci\u00f3n","text":""},{"location":"virtual/#introduccionherramientas-de-virtualizacion","title":"Introducci\u00f3n.Herramientas de virtualizaci\u00f3n","text":"<p>A pesar de que parezca una tecnolog\u00eda moderna, fue desarrollada en la d\u00e9cada de los 60 por IBM. La primera m\u00e1quina dise\u00f1ada para estos menesteres fue el IBM S/360 Modelo 67. Estos mainframes o superordenadores no optimizaban sus recursos por lo que surgi\u00f3 la idea \u201cfraccionar l\u00f3gicamente\u201d los recursos y dividirlos en varias tarea, lo que hoy se conoce somo multitasking. En la d\u00e9cada de los 80 y principios de los 90 con el abaratamiento del hardware gracias a los procesadores x86 de Intel, comenz\u00f3 a generalizarse el uso de microordenadores que estaban lejos de las prestaciones ofrecidas por los mainframes. Esto provoc\u00f3 que la tecnolog\u00eda de virtualizaci\u00f3n dejara de utilizarse hasta bien entrados los a\u00f1os 90. Volvi\u00f3 a utilizarse profusamente en el \u00e1mbito de los servidores, pero tambi\u00e9n se empez\u00f3 a usar en otros \u00e1mbitos de la inform\u00e1tica como el test de software o seguridad de aplicaciones usando para ello los sandboxes.</p> <p>La virtualizaci\u00f3n crea una capa de abstracci\u00f3n de los recursos de un ordenador para que puedan ser utilizados por un sistema operativo virtualizado. Esta nueva capa de abstracci\u00f3n se denomina Hypervisor o VMM (Virtual Machine Monitor) y su trabajo consiste en administrar recursos reales de una m\u00e1quina y convertirlos en recursos virtuales.</p> <p>La m\u00e1quina que ofrece sus recursos reales para que sean convertidos en virtuales se denomina m\u00e1quina anfitri\u00f3n. Por otra parte, la m\u00e1quina que utiliza estos recursos virtualizados ofrecidos por la m\u00e1quina anfitri\u00f3n se denomina m\u00e1quina hu\u00e9sped. Lo habitual en esta tecnolog\u00eda es que existan m\u00e1s de una m\u00e1quina hu\u00e9sped por cada m\u00e1quina anfitri\u00f3n y no viceversa. Es posible encontrar el caso contrario y se trata de la tecnolog\u00eda empleada en los sistemas operativos distribuidos vistos en la unidad anterior.</p> <p></p> <p>Esta capa de software (VMM) gestiona los recursos principales del ordenador como el procesador, la memoria principal, dispositivos perif\u00e9ricos, memoria secundaria y redes de comunicaci\u00f3n. Se encarga de repartir los recursos de forma din\u00e1mica entre todos las m\u00e1quinas virtuales, lo que hace que se pueda contener varias m\u00e1quinas dentro de un s\u00f3lo anfitri\u00f3n. No es raro encontrar numerosas herramientas de virtualizaci\u00f3n en el mercado especializadas en diferentes \u00e1mbitos. Existen varias formas de virtualizaci\u00f3n y es posible virtualizar tanto el hardware como el software de servidor, sesiones de usuario, aplicaciones y tambi\u00e9n se pueden crear m\u00e1quinas virtuales en un ordenador de escritorio. Esta \u00faltima ser\u00e1 la forma que se utilizar\u00e1 a lo largo de este m\u00f3dulo. Se crear\u00e1n varias m\u00e1quinas virtuales conectadas entre s\u00ed para dar soporte a nuestra infraestructura de servicio de directorio.</p> <p>En cuanto a tipos de virtualizaci\u00f3n, existe cuantiosa casu\u00edstica, pero hay dos tipolog\u00edas que destacan entre ellas; por la infraestructura de virtualizaci\u00f3n y por la t\u00e9cnica de virtualizaci\u00f3n.</p> <p>En el primer caso disponemos de virtualizaci\u00f3n de nivel 1, que es la que realiza directamente sobre el hardware de la m\u00e1quina anfitri\u00f3n sin intermediarios. No existe sistema operativo que gestione los recursos de la m\u00e1quina para ofrec\u00e9rselos al software de virtualizaci\u00f3n, sino que es el software de virtualizaci\u00f3n el que accede directamente a los recursos f\u00edsicos y los transforma en virtuales. La ventaja de no contar con otro sistema operativo entre la virtualizaci\u00f3n y el hardware, facilita y optimiza la conversi\u00f3n de los recursos. Se pueden encontrar diferentes herramientas de nivel 1, recordemos las m\u00e1s destacadas:</p> <ul> <li> <p>Xen Project Hypervisor es una plataforma de virtualizaci\u00f3n de nivel 1 de c\u00f3digo abierto mantenido por una comunidad de desarrolladores que se mantiene muy activa. Muchas de las plataformas de virtualizaci\u00f3n on-line est\u00e1n basadas en Xen Project Hypervisor como Amazon Web Services, Aliyum y Verizon Cloud entre otras.</p> </li> <li> <p>Proxmox es un software de c\u00f3digo abierto con su propia comunidad de desarrolladores. Est\u00e1 orientada a la construcci\u00f3n de infraestructuras inform\u00e1ticas a lo largo de una red local. Posee una interfaz web para el control de las m\u00e1quinas y ofrece otra serie de servicios virtualizados como Proxmox Mail Gateway, un filtro de spam y virus, aunque estos productos requieren de una suscripci\u00f3n.</p> </li> <li>Hyper-V es otra propuesta por parte de Microsoft de c\u00f3digo propietario y de pago en este caso. La ventaja sobre otras plataformas de nivel 1 es que es una plataforma nativa para sistemas operativos de la compa\u00f1\u00eda, lo que favorece su rendimiento y escalabilidad. Esta plataforma tambi\u00e9n puede trabajar como una de nivel 2, integrada en la familia de servidores de Microsoft desde Windows Server 2008.</li> <li>WMware vSphere Hypervisor es otra plataforma de nivel 1 ofrecida por WMware (empresa referente en el mundo de la virtualizaci\u00f3n) de c\u00f3digo propietario pero de uso gratuito.</li> </ul> <p>La virtualizaci\u00f3n de nivel 2 al contrario, se realiza sobre el sistema operativo de la m\u00e1quina anfitri\u00f3n. Se instala una aplicaci\u00f3n que contendr\u00e1 las m\u00e1quinas virtuales. Este tipo de virtualizaci\u00f3n es la m\u00e1s extendida y es con la que se trabajar\u00e1 en este m\u00f3dulo. Entre los diferentes sistemas de virtualizaci\u00f3n de nivel 2, se destacan las siguientes:</p> <ul> <li>VMware Workstation que nos ofrece una de las plataformas de nivel 2 m\u00e1s potentes y se ha convertido en un est\u00e1ndar del sector para la virtualizaci\u00f3n. Es de c\u00f3digo propietario y su uso es de pago, aunque disponemos de VWware Workstation Player de forma gratuita, aunque perderemos la capacidad de crear m\u00e1quinas virtuales, tan s\u00f3lo administrarlas.</li> <li>Oracle VM VirtualBox es una propuesta que hasta 2007 dispon\u00eda de su versi\u00f3n OSE (Open Source Edition) bajo licencia GPL 2 (General Public License). Actualmente es de c\u00f3digo propietario pero gratuita, aunque tan s\u00f3lo se puede utilizar bajo licencia de \u201cUso personal y de Evaluaci\u00f3n\u201d PUEL (Personal Use and Evaluation License). Licencia que se ajustar\u00e1 las necesidades de este m\u00f3dulo, por lo que ser\u00e1 esta herramienta la que se usar\u00e1 para virtualizar la infraestructura necesaria.</li> <li>QEMU es un emulador y plataforma virtual de c\u00f3digo abierto que se distribuye de forma gratuita. Es compatible con la mayor\u00eda de m\u00e1quinas virtuales y permite administrar las creadas con Xen Project Hypervisor con un rendimiento muy cercano al original.</li> </ul> <p>En cuanto a la clasificaci\u00f3n por t\u00e9cnicas de virtualizaci\u00f3n disponemos de dos tipos:</p> <ul> <li>virtualizaci\u00f3n por software, que posibilita la virtualizaci\u00f3n en todo tipo de ordenadores, antiguos y modernos, pero las m\u00e1quinas virtuales son lentas y necesita m\u00e1s recursos por parte del procesador.</li> <li>virtualizaci\u00f3n por hardware, que aceleran la ejecuci\u00f3n del hu\u00e9sped, pero s\u00f3lo funcionan con procesadores modernos. En el caso de Intel, la virtualizaci\u00f3n por hardware se denomina VT-x y en el caso de AMD, se denomina AMD-V. En la mayor\u00eda de ordenadores, la virtualizaci\u00f3n por hardware se debe habilitar en la BIOS.</li> </ul> <p>Las ventajas que ofrece esta tecnolog\u00eda son notables y van desde la reutilizaci\u00f3n y optimizaci\u00f3n del aprovechamiento del hardware hasta la contribuci\u00f3n medioambiental, pasando por la r\u00e1pida incorporaci\u00f3n de nuevos recursos al sistema virtualizado, reducci\u00f3n de costes econ\u00f3micos y espaciales, mejora de los procesos de clonaci\u00f3n y copia de sistema, mejora los procesos de aislamiento ante un fallo o alerta de seguridad y la administraci\u00f3n global centralizada de los recursos.</p>"},{"location":"virtual/#configuracion-y-administracion-de-un-sistema-virtualizado","title":"Configuraci\u00f3n y administraci\u00f3n de un sistema virtualizado","text":"<p>Los pasos contenidos en este apartado son v\u00e1lidos para cualquier sistema de virtualizaci\u00f3n de nivel 2, pero se va a centrar los ejemplos en la soluci\u00f3n Oracle VM VirtualBox. Esta plataforma permite la creaci\u00f3n de m\u00e1quinas virtuales y una red virtual para conectar estas m\u00e1quinas sin ocasionar interferencias con las m\u00e1quinas o redes f\u00edsicas en las que se encuentre el equipo anfitri\u00f3n.</p>"},{"location":"virtual/#creacion-de-una-maquina-virtual","title":"Creaci\u00f3n de una m\u00e1quina virtual","text":"<p>A la hora de crear una m\u00e1quina virtual, Oracle VM VirtualBox ofrece un asistente que guiar\u00e1 a trav\u00e9s de todo el proceso. Una vez lanzado el asistente ahorraremos tiempo si se usa el bot\u00f3n de Modo Experto el cual mostrar\u00e1 en una sola ventana las opciones de creaci\u00f3n de nuestra m\u00e1quina.</p> <p></p> <p>Tres son los elementos que se deben configurar como m\u00ednimo para la creaci\u00f3n de una m\u00e1quina virtual:</p> <ul> <li>El tipo de sistema operativo que contendr\u00e1 la m\u00e1quina y su arquitectura,</li> <li>El tama\u00f1o de la memoria principal y</li> <li>Qu\u00e9 disco duro virtual le asignaremos como memoria secundaria.   Hay que tener presente los recursos de los que dispone la m\u00e1quina anfitri\u00f3n, y no ceder demasiados de \u00e9stos para que el rendimiento no caiga hasta l\u00edmites insufribles. Habitualmente el software de virtualizaci\u00f3n avisa al usuario si va a superar estos l\u00edmites.</li> </ul> <p>La elecci\u00f3n de un tipo de disco duro determinar\u00e1 en que plataformas ser\u00e1 compatible ese disco duro virtual. De esta manera VDI (VirtualBox Disk Image) ser\u00e1 el formato nativo de VirtualBox, aunque tambi\u00e9n disponemos de VHD (Virtual Hard Disk) de Microsoft Virtual PC, VMDK (Virtual Machine Disk) propia de VMware Workstation, HDD (Parallels Hard Disk) de Parallels o los formatos QCOW (QEMU Copy-On-Web) y QED (QEMU Enhanced Disk) de la plataforma QEMU.</p> <p>Algo a tener muy en cuenta es el tipo de almacenamiento f\u00edsico que vamos a dar al disco duro virtual. Existen dos opciones:</p> <ul> <li>Almacenamiento reservado din\u00e1micamente, aumenta el tama\u00f1o del fichero a medida que los archivos se van copiando en el disco duro virtual. En esta configuraci\u00f3n no importa el tama\u00f1o m\u00e1ximo del disco, ya que tan s\u00f3lo cuando \u00e9ste est\u00e9 lleno, ocupar\u00e1 ese espacio de forma f\u00edsica en el disco anfitri\u00f3n. Ofrece la ventaja de ahorrar espacio en el disco duro f\u00edsico, pero es una configuraci\u00f3n m\u00e1s lenta ya que tiene que redireccionar espacio nuevo cada vez que se escribe un archivo en el disco duro virtual.</li> <li>Almacenamiento en tama\u00f1o fijo, reserva el espacio en el disco anfitri\u00f3n en funci\u00f3n del total de la capacidad del disco duro virtual. Si el tama\u00f1o m\u00e1ximo del disco duro virtual es de 32 GB, ser\u00e1 ese el tama\u00f1o del archivo en el disco duro f\u00edsico. Esta configuraci\u00f3n consume m\u00e1s cantidad de recursos del sistema anfitri\u00f3n. Por contra en acceso al disco es m\u00e1s r\u00e1pido, ya que no ser\u00e1 necesario la redirecci\u00f3n de espacio nuevo en el disco duro en cada escritura.</li> </ul> <p>El fichero que contenga en disco duro virtual, tendr\u00e1 unas dimensiones considerables, sobre todo si se usa la t\u00e9cnica de almacenamiento en tama\u00f1o fijo. Oracle VM Workstation ofrece la posibilidad de dividir este fichero en fragmentos de 2 GB lo que permitir\u00e1 mejor gesti\u00f3n del disco duro, el aumento de seguridad y la compatibilidad. Marcar esta casilla es obligatorio si el disco duro anfitri\u00f3n posee un sistema de archivos anterior a NTFS (FAT16 o FAT32).</p>"},{"location":"virtual/#administrador-de-medios-virtuales","title":"Administrador de medios virtuales","text":"<p>Cuando se crea una m\u00e1quina virtual se crea tambi\u00e9n una disco duro virtual alojado en el disco duro anfitri\u00f3n, como se ya se ha mencionado. La creaci\u00f3n de este dispositivo virtual lleva consigo la asignaci\u00f3n de un identificador un\u00edvoco basado en UUID (Universal Unique Identifier). Se trata de un n\u00famero de 128 bits separado en cinco grupos por guiones. Esta identificaci\u00f3n \u00fanica evita que el mismo disco duro virtual sea asignado a varias m\u00e1quinas virtuales de forma simult\u00e1nea. Cuando se crea una m\u00e1quina, se le asocia un disco duro nuevo o bien uno ya existente. Mientras este disco est\u00e9 asignado a una m\u00e1quina virtual se encuentra en estado ligado y tan solo esa m\u00e1quina ser\u00e1 capaz de escribir en \u00e9l. Esto quiere decir tambi\u00e9n que no se puede asignar a ninguna otra.</p> <p>Si es necesario realizar esta asignaci\u00f3n, antes se debe liberar ese disco a trav\u00e9s del administrador de medios virtuales. De esta forma simulamos el funcionamiento f\u00edsico de los discos duros y, adem\u00e1s, dotamos de m\u00e1s seguridad al sistema virtualizado.</p> <p></p> <p>Desde este mismo men\u00fa podremos realizar una copia de un disco duro virtual. Una vez realizada, el disco duro copiado habr\u00e1 generado un nuevo UUID, indicando que, a pesar de ser una copia exacta del primero, en realidad Oracle VM VirtualBox lo tratar\u00e1 como un disco duro diferente. Este disco reci\u00e9n creado se le puede asignar a cualquier m\u00e1quina virtual disponible, incluso la que contiene el disco original.</p> <p>Otras de las acciones que se puede realizar en este administrador, es dotar de funcionalidades especiales a los discos duros virtuales. Existen diferentes modos los cuales se resumen en:</p> <ul> <li> <p>normal, esta es la configuraci\u00f3n por defecto cuando se crea un nuevo disco duro. No existen restricciones sobre como el sistema operativo hu\u00e9sped lee y escribe en el disco. Los cambios que se produzcan en \u00e9l ser\u00e1n permanentes.</p> </li> <li> <p>inmutable, cualquier dato escrito por un sistema operativo hu\u00e9sped en un disco inmutable se almacena en una imagen de disco de diferenciaci\u00f3n separada. Cuando la m\u00e1quina virtual a la que se adjunta la imagen de disco se apaga o reinicia, el disco de diferenciaci\u00f3n y los contenidos que se encuentran en \u00e9l se descartan, dejando el disco inmutable inalterado. Este enfoque permite que m\u00faltiples m\u00e1quinas virtuales que comparten el mismo archivo de imagen de disco, cada uno se le asigna su propio disco de diferenciaci\u00f3n durante el tiempo de ejecuci\u00f3n. A pesar de soportar m\u00e1s de una m\u00e1quina ligado a un dispositivo inmutable, tan s\u00f3lo una de ellas puede estar encendida de forma simultanea.</p> </li> <li> <p>escritura simult\u00e1nea, permite las operaciones de escritura y lectura como en modo normal con la salvedad que al apagar o reiniciar la m\u00e1quina el disco vuelve a su estado original.</p> </li> <li> <p>compartible, permite compartir un disco duro entre varias m\u00e1quinas virtuales. Esto lo hace ideal para la formaci\u00f3n de clusters. S\u00f3lo los discos de tama\u00f1o fijo pueden utilizar esta configuraci\u00f3n.</p> </li> <li> <p>multiconexi\u00f3n, b\u00e1sicamente se trata de un medio inmutable con conexi\u00f3n de varias m\u00e1quinas simult\u00e1neamente. Adem\u00e1s, el disco de diferenciaci\u00f3n que crea cada m\u00e1quina conectada a este disco duro, no se borra al reiniciar o apagar el sistema virtual.</p> </li> </ul> <p></p> <p>Este administrador tambi\u00e9n gestiona los discos \u00f3pticos y los discos flexibles, indicando a qu\u00e9 m\u00e1quina virtual est\u00e1n conectados y permitiendo conectarlos a otra m\u00e1quina si as\u00ed se requiere. Estos dispositivos funcionan de igual forma que los discos duros virtuales en modo normal, pudiendo estar conectados a una \u00fanica m\u00e1quina virtual de forma simult\u00e1nea.</p>"},{"location":"virtual/#configurar-redes-virtuales","title":"Configurar redes virtuales","text":"<p>Una de las ventajas de trabajar con m\u00e1quinas virtuales, es que desde el punto de vista de una red local, podemos tratarla de igual forma que si de un equipo f\u00edsico se tratase. Es m\u00e1s, si as\u00ed se requiere, tambi\u00e9n nos permite la creaci\u00f3n de una red local interna y que tan s\u00f3lo los equipos hu\u00e9sped sean capaces de detectar. Esta configuraci\u00f3n brinda la posibilidad de crear sistemas inform\u00e1ticos de prueba completamente virtualizados, y sin interacci\u00f3n alguna con la m\u00e1quina anfitri\u00f3n. Cualquiera de estas configuraciones debe realizarse sobre el adaptador de red virtual, que ser\u00e1 el encargado de gestionar la conexi\u00f3n de la m\u00e1quina. Hay que conocer las distintas configuraciones que se le pueden asignar a un dispositivo de red virtual:</p> <ul> <li>no conectado, la tarjeta virtual existe en el hu\u00e9sped, pero est\u00e1 configurada como si no tuviera ning\u00fan cable conectado. Huelga decir que la m\u00e1quina hu\u00e9sped no dispone de conexi\u00f3n de red alguna.</li> <li>NAT, (Network Address Translation) es el modo por defecto de la tarjeta de red virtual. La m\u00e1quina hu\u00e9sped puede conectarse a otras redes mediante un router virtual proporcionado por Oracle VirtualBox. En este modo es posible navegar por Internet sin ser detectado por el resto de nodos de la red. Dicho router sirve direcciones DHCP del tipo 10.0.X.0/24 donde X es igual a dos para la primera tarjeta de red, X es igual a tres para la segunda tarjeta de red y as\u00ed sucesivamente. En el caso de una \u00fanica tarjeta de red, el router tiene como puerta de enlace la direcci\u00f3n 10.0.2.2, como servidor DNS la direcci\u00f3n 10.0.2.3 y la primera direcci\u00f3n DHCP asignada es la 10.0.2.15.</li> <li>red NAT, configura una red a la que se unen todas las m\u00e1quinas virtuales que quieran tener acceso a Internet sin interferir con la red en la que est\u00e1 inmersa el anfitri\u00f3n. Antes de unirnos a una red de estas caracter\u00edsticas habr\u00e1 que crearla con la herramienta en l\u00ednea de comandos vboxmanage o a trav\u00e9s del administrador de redes.</li> <li>Adaptador puente, se crea un tarjeta de red virtual en el anfitri\u00f3n que intercepta el tr\u00e1fico del hu\u00e9sped y puede inyectar paquetes en la red, de manera que el hu\u00e9sped se configura como si estuviera conectado por un cable a la tarjeta de red virtual del anfitri\u00f3n. La m\u00e1quina hu\u00e9sped es visible en la red.</li> <li>red interna, se crea una red virtual visible entre las m\u00e1quinas virtuales, pero invisible al anfitri\u00f3n y a m\u00e1quinas externas a la red. Cada red virtual creada se identifica mediante un nombre. Para conectar a los hu\u00e9spedes en la misma red virtual, ser\u00e1 necesario que sus controladoras de red se sit\u00faen en la red con el mismo nombre.</li> <li>adaptador s\u00f3lo-an\ufb01tri\u00f3n: en este modo se crea una tarjeta de red virtual en el anfitri\u00f3n que puede conectarse con las m\u00e1quinas virtuales sin necesitar que el anfitri\u00f3n tenga una tarjeta destinada a esta tarea.</li> </ul> <p></p>"},{"location":"virtual/#instalacion-de-sistemas-operativos-requisitos-y-configuracion-previa","title":"Instalaci\u00f3n de sistemas operativos. Requisitos y configuraci\u00f3n previa","text":"<p>Una de las primera tareas que se deben realizar para la instalaci\u00f3n de un sistema operativo, es confirmar que efectivamente se puede instalar. Para ello es necesario comprobar los requisitos m\u00ednimos de hardware que se deben cumplir para que el sistema operativo se instale y funcione correctamente.</p> <p>Es necesario revisar los requerimientos en la velocidad del procesador, cantidad de memoria principal y CHIPSET de la placa base. En la actualidad las tarjetas gr\u00e1ficas y la memoria secundaria son requisitos que se cumplen con relativa facilidad.</p> <p>Adem\u00e1s, es muy importante comprobar que el fabricante del hardware dispone de los controladores para la versi\u00f3n del sistema operativo. La inexistencia de ellos no impide la instalaci\u00f3n, pero afectar\u00e1 al rendimiento general del ordenador. Una vez determinados los requisitos m\u00ednimos de hardware, hay que asegurarse si es compatible con el sistema operativo que haya elegido para la infraestructura, sobre todo en lo referente a la arquitectura del procesador. Un procesador con una arquitectura de 32 bits ser\u00e1 incapaz de manejar un sistema operativo de una arquitectura diferente. Adem\u00e1s, en la medida de lo posible se ha de elegir la arquitectura de 64 bits para contener los sistemas operativos, ya que la anterior posee ciertas limitaciones que supondr\u00edan un lastre en el sistema.</p> <p>En la actualidad, la instalaci\u00f3n de un sistema operativo es un proceso completamente guiado y trivial, por lo que no se ahondar\u00e1 mucho en este proceso. Ser\u00e1 con posterioridad cuando se configuren muchos de los aspectos que se han configurado de forma autom\u00e1tica. Pero antes ser\u00e1 necesario realizar ciertas comprobaciones:</p> <ul> <li>revisar la compatibilidad y requerimientos del hardware.</li> <li>arrancar el ordenador con el medio extra\u00edble conectado y la BIOS debidamente configurada.</li> <li>iniciar el asistente de instalaci\u00f3n que guiar\u00e1 el proceso de instalaci\u00f3n.</li> <li>asignar particiones de forma adecuada a los discos duros, proceso que se realizar\u00e1 de forma autom\u00e1tica en este apartado.</li> <li>tras la copia de ficheros, realizar configuraciones iniciales en cada sistema operativo, operaciones que se analizar\u00e1n en la unidad de trabajo n\u00famero 3.</li> </ul> <p>No existen muchas diferencias entre el proceso de instalaci\u00f3n de un sistema operativo cliente y uno de red, al menos en sistemas operativos de Microsoft. Por lo que respecta a distribuciones basadas en GNU/Linux usadas en este manual, s\u00ed existen algunas diferencias entre instalar un sistema operativo cliente o uno de red. Las diferencias se ilustran en el siguiente apartado.</p>"},{"location":"virtual/#herramientas-de-virtualizacion","title":"Herramientas de virtualizaci\u00f3n","text":"<p>Para el estudio de los contenidos que se detallan es este punto ser\u00e1 necesario la instalaci\u00f3n, en cada sistema operativo contenido en una m\u00e1quina virtual, la herramienta Oracle Guest Additions.</p> <p>Para instalarla, una vez arrancada la m\u00e1quina virtual, se accede al men\u00fa Dispositivos  \u2192 Insertar imagen de CD de las Guest Additions\u2026  . Tras esto se deber\u00e1 instalar el software en la m\u00e1quina hu\u00e9sped como si de un programa normal se tratase (claro dependiendo que sistema operativo sea). Al acabar, y tras reiniciar el sistema virtualizado, ya se dispondr\u00e1 de las opciones de compartici\u00f3n que se especifican en este apartado.</p>"},{"location":"virtual/#comunicacion-anfitrion-huesped","title":"Comunicaci\u00f3n anfitri\u00f3n-hu\u00e9sped","text":"<p>Aunque dispongamos de una red y la m\u00e1quina hu\u00e9sped se encuentre dentro de esta red de alguna de las formas que se han visto en el apartado anterior, es posible que tanto el hu\u00e9sped como el anfitri\u00f3n se comuniquen sin necesidad de estar contenidos dentro de ella. Adem\u00e1s de ser una comunicaci\u00f3n m\u00e1s r\u00e1pida y c\u00f3moda, no interfiere en con el resto de equipos tanto virtuales como f\u00edsicos.</p>"},{"location":"virtual/#carpetas-compartidas","title":"Carpetas compartidas .","text":"<p>En la m\u00e1quina anfitri\u00f3n se crea una carpeta a la que los hu\u00e9spedes pueden acceder. El acceso se realizar\u00e1 en funci\u00f3n del sistema operativo que contenga la m\u00e1quina virtual. Si se trata de un sistema de Microsoft, se acceder\u00e1 a la carpeta como si de un recurso de red se tratase. Si se trata de un sistema operativo GNU/Linux o Solaris se proporciona un sistema de archivos especial dise\u00f1ado para estas tareas denominado vboxsf.</p>"},{"location":"virtual/#dispositivos-usb","title":"Dispositivos USB","text":"<p>Otra forma r\u00e1pida de compartir ficheros es el uso de dispositivos de almacenamiento USB. Conseguiremos conectar un dispositivo USB a la m\u00e1quina virtual siguiendo estos pasos:</p> <ul> <li>conecta el USB a la m\u00e1quina anfitri\u00f3n.</li> <li>en la m\u00e1quina hu\u00e9sped Dispositivos\u2192 USB y aparecer\u00e1 un listado de los dispositivos que se encuentran conectados.</li> <li>pulsamos sobre alguno de ellos, el control de \u00e9ste pasar\u00e1 a manos de la m\u00e1quina virtual.</li> <li>para liberar el dispositivo USB, pulsamos sobre el dispositivo que queramos liberar, el anfitri\u00f3n retomar\u00e1 el control sobre \u00e9l.</li> </ul> <p>Hay que tener en cuenta que esta acci\u00f3n desconectar\u00e1 la el dispositivo USB de la m\u00e1quina anfitri\u00f3n. Si en ese momento existe alg\u00fan fichero abierto en \u00e9l, es posible la p\u00e9rdida de informaci\u00f3n. Esta situaci\u00f3n se repite cuando queremos liberar el dispositivo desde la m\u00e1quina hu\u00e9sped.</p>"},{"location":"virtual/#arrastrar-y-soltar","title":"Arrastrar y soltar","text":"<p>Oracle VirtualBox permite con este m\u00e9todo arrastrar archivos entre anfitri\u00f3n-cliente como si de una carpeta se tratase. Para habilitarlo hay que ir al men\u00fa a Dispositivos \u2192 Arrastrar y soltar. Se puede elegir el sentido de la copia de ficheros, desactivarlo o configurarlos como bidireccional.</p> <p></p>"},{"location":"virtual/#portapapeles","title":"Portapapeles","text":"<p>Tambi\u00e9n es posible compartir el portapapeles entre los sistemas anfitri\u00f3n-hu\u00e9sped a trav\u00e9s del men\u00fa Dispositivos \u2192 Portapapeles compartido. De igual forma que en el caso anterior, es posible configurar la direcci\u00f3n o deshabilitar esta caracter\u00edstica.</p> <p>En definitiva, se dispone de muchas opciones para compartir ficheros entre la m\u00e1quina anfitri\u00f3n y el hu\u00e9sped. A todas las vistas en este apartado hay que a\u00f1adir los recursos compartidos de red. Elegir una de ellas depender\u00e1 de la necesidades de cada ocasi\u00f3n y tambi\u00e9n de las preferencias del usuario.</p>"},{"location":"virtual/#herramientas-avanzadas","title":"Herramientas avanzadas","text":"<p>Este apartado no pretende ser exhaustivo, ya que la explicaci\u00f3n de todas las posibilidades que ofrece una herramienta como Oracle VirtualBox excede de las pretensiones de este manual. S\u00ed que se trata de acciones comunes que todo usuario debe conocer para optimizar su trabajo.</p>"},{"location":"virtual/#instantaneas","title":"Instant\u00e1neas","text":"<p>Las instant\u00e1neas, tambi\u00e9n conocidas como snapshots, permiten al usuario realizar una copia del estado actual de la m\u00e1quina para poder regresar a \u00e9l con posterioridad. Esta opci\u00f3n es \u00fatil cuando se necesita realizar una instalaci\u00f3n de software cr\u00edtico, alguna configuraci\u00f3n del sistema o alguna otra acci\u00f3n que ponga en peligro la estabilidad del sistema operativo. Antes de proceder a esta acci\u00f3n, es conveniente realizar una instant\u00e1nea para guardar el estado actual del sistema. A partir de este punto, todos los cambios que se realicen quedar\u00e1n guardados en un disco duro virtual diferencial. Una vez acabado la acci\u00f3n cr\u00edtica sobre el sistema, \u00e9ste podr\u00e1 volver a un estado anterior y comenzar una nueva l\u00ednea de tiempo, si as\u00ed se requiere.</p> <p></p> <p>Cuando Oracle VirtualBox realiza una instant\u00e1nea las guarda en la pesta\u00f1a de Instant\u00e1neas de cada m\u00e1quina virtual. Es posible realizarlas tanto con la m\u00e1quina corriendo como apagada y muy recomendable que escribamos un comentario del motivo por el cual realizamos la instant\u00e1nea. Pasados unos d\u00edas ser\u00e1 dif\u00edcil recordar el porqu\u00e9 se hizo esa snapshot. Si es necesario la recuperaci\u00f3n de una de ellas, tan s\u00f3lo habr\u00e1 que pulsar el bot\u00f3n derecho sobre ella y seleccionar la opci\u00f3n  Restaurar Instant\u00e1nea  del men\u00fa emergente.</p>"},{"location":"virtual/#atajos-de-teclado","title":"Atajos de teclado","text":"<p>Existen combinaciones de teclas especiales para cada sistema operativo. Cuando se realizan estas combinaciones, siempre son captadas por el anfitri\u00f3n, dejando sin posibilidad de reacci\u00f3n al hu\u00e9sped. Por ejemplo, si pulsamos la combinaci\u00f3n Alt+Crtl+Supr con una m\u00e1quina hu\u00e9sped abierta, no ser\u00e1 \u00e9sta la que muestre el administrador de tareas, sino el anfitri\u00f3n. Para enviar ordenes mediante combinaci\u00f3n de teclas especiales al hu\u00e9sped es posible realizarla de dos formas:</p> <ul> <li>a trav\u00e9s del men\u00fa Entrada  \u2192 Teclado  en la ventana de la m\u00e1quina   virtuales. <li>mediante una combinaci\u00f3n de teclas alternativa, todas los hu\u00e9spedes tienen una tecla especial denominada tecla anfitri\u00f3n que nos brinda otra forma de interactuar con ella. En el ejemplo anterior, si es necesario abrir el administrador de tareas en el hu\u00e9sped, se realizar\u00e1 pulsando la tecla anfitri\u00f3n+Supr .   Por defecto,Oracle VM VirtualBox establece que la tecla anfitri\u00f3n es Ctrl Derecho. A trav\u00e9s del men\u00fa Entrada  \u2192 Teclado \u2192 Preferencias de teclado\u2026  se habilitar\u00e1 un editor para poder cambiar tanto la tecla anfitri\u00f3n como sus combinaciones.</li> <p></p>"},{"location":"virtual/#clonar-una-maquina-virtual","title":"Clonar una m\u00e1quina virtual","text":"<p>Clonar una m\u00e1quina es crear una copia de un hu\u00e9sped exactamente igual a la clonada con la salvedad de sus n\u00fameros de identificaci\u00f3n (UUID) diferentes. De esta forma ambas m\u00e1quinas podr\u00e1n ser ejecutadas dentro del mismo entorno. Es una pr\u00e1ctica recomendable que, tras acabar la instalaci\u00f3n e instalar las Guess Additions, se realice una clon de la m\u00e1quina para disponer de una copia limpia por si ocurriera alg\u00fan desastre. Es importante tener en cuenta que el hu\u00e9sped clonado siempre debe permanecer apagado hasta que termine el proceso.</p> <p>Existe un asistente de clonado en que se deber\u00e1 indicar el nombre de la nueva m\u00e1quina, si se quiere cambiar la MAC de los dispositivos de red (importante, hay que recordar que no pueden haber dos tarjetas de red con la misma direcci\u00f3n f\u00edsica dentro del sistema), as\u00ed como si se desea clonar tan s\u00f3lo el estado actual de la m\u00e1quina o con todas sus instant\u00e1neas.</p> <p>Adem\u00e1s de estas opciones, es importante la selecci\u00f3n del tipo de clonaci\u00f3n que mejor se adapte a las necesidades del proyecto:</p> <ul> <li>completa, crea una copia de todos los archivos de la m\u00e1quina virtual junto con todos sus discos duros.</li> <li>enlazada, crea una copia de todos los archivos de la m\u00e1quina virtual pero no de los discos duros. En su lugar genera un nuevo disco duro diferencial donde almacena los cambios que se producen sobre el estado inicial de la m\u00e1quina clonada. En este estado, el nuevo hu\u00e9sped es dependiente de la m\u00e1quina original y no podr\u00e1 funcionar sin ella. Este m\u00e9todo ahorra espacio en el disco duro pero aumenta las dependencias entre dispositivos virtuales.</li> </ul> <p></p> <p>Una vez seleccionadas todas las opciones, pulsando el bot\u00f3n Clonar obtendremos una nueva m\u00e1quina id\u00e9ntica a la inicial.</p>"},{"location":"virtual/#exportacion-e-importacion-de-maquinas-virtuales","title":"Exportaci\u00f3n e importaci\u00f3n de m\u00e1quinas virtuales","text":"<p>Este m\u00e9todo es valido cuando queremos trasladar alguna m\u00e1quina hu\u00e9sped de un equipo a otro e incluso de un software de virtualizaci\u00f3n diferente de d\u00f3nde fue creado. Para ello se dispone de un est\u00e1ndar abierto para empaquetar y distribuir servicios virtualizados denominado Open Virtualization Format (OVF). Al tratarse de un est\u00e1ndar abierto no est\u00e1 vinculado a ninguna arquitectura de procesador en concreto. La unidad de empaquetado y distribuci\u00f3n se denomina paquete OVF y puede contener uno o m\u00e1s sistemas virtuales, cada uno de los cuales se puede implementar en una m\u00e1quina virtual distinta.</p> <p>Para realizar estas acciones, para las cuales las m\u00e1quinas y/o servicios virtualizados deben estar apagados, es necesario ir al  Archivo \u2192 Exportar servicio virtualizado\u2026  y seguir el asistente que aparece.</p>"},{"location":"virtual/#cifrado-de-maquinas-virtuales","title":"Cifrado de m\u00e1quinas virtuales","text":"<p>Oracle VM VirtualBox ofrece una opci\u00f3n para cifrar las m\u00e1quinas virtuales que contengan informaci\u00f3n sensible. En concreto cifrar\u00e1 el archivo de disco o discos duros que del que el sistema virtualizado disponga. A trav\u00e9s del men\u00fa Configuraci\u00f3n&lt; \u2192 General  \u2192 Cifrado se puede activar el cifrado de la m\u00e1quina virtual.</p> <p>Se utilizar\u00e1 un algoritmo de cifrado sim\u00e9trico AES de 128 o 256 bits. Tras insertar la contrase\u00f1a comenzar\u00e1 el proceso de cifrado. Es posible revertir esta operaci\u00f3n si se desmarca la opci\u00f3n Habilitar cifrado. En ese caso el programa solicitar\u00e1 la clave AES y proceder\u00e1 al descifrado de los archivos de la m\u00e1quina virtual. <p>El cifrado del disco duro virtual permitir\u00e1 que tan s\u00f3lo la m\u00e1quina que lo ha cifrado pueda usarlo, a menos que, al configurarlo en otro hu\u00e9sped, introduzcamos la contrase\u00f1a de cifrado. Esto evita que el disco virtual pueda conectarse a otras m\u00e1quinas sin el consentimiento del administrador del sistema.</p> <p>Se ha de tener en cuenta que, al menos hasta la versi\u00f3n 5.1 de Oracle VM VirtualBox, es necesario instalar el Oracle VirtualBox Extension Pack para tener disponible la opci\u00f3n de cifrado. Este paquete es descargable desde su p\u00e1gina oficial. Adem\u00e1s de esta caracter\u00edstica ofrece la posibilidad de cambiar el controlador de los dispositivos USB virtuales de la versi\u00f3n 1.0 a la 2.0 o 3.0, con el significativo aumento de rendimiento, el uso de la webcam del anfitri\u00f3n y el VirtualBox RDP (Remote Desktop Protocol) entre otras funcionalidades.</p> <p>Son muchas las caracter\u00edsticas que ofrece este software de virtualizaci\u00f3n, aunque conocerlas todas no es el objetivo de este manual. Conociendo las herramientas descritas en esta unidad, el trabajo del resto del manual se realizar\u00e1 sin complicaciones.</p>"}]}